package com.cqjtu.sc.authservice.db.dao;

import com.cqjtu.sc.authservice.db.domain.AdminAuthority;
import com.cqjtu.sc.authservice.db.domain.AdminAuthorityExample;
import java.util.List;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
@Mapper
public interface AdminAuthorityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_authority
     *
     * @mbg.generated
     */
    long countByExample(AdminAuthorityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_authority
     *
     * @mbg.generated
     */
    int deleteByExample(AdminAuthorityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_authority
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer authorityId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_authority
     *
     * @mbg.generated
     */
    int insert(AdminAuthority record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_authority
     *
     * @mbg.generated
     */
    int insertSelective(AdminAuthority record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_authority
     *
     * @mbg.generated
     */
    AdminAuthority selectOneByExample(AdminAuthorityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_authority
     *
     * @mbg.generated
     */
    AdminAuthority selectOneByExampleSelective(@Param("example") AdminAuthorityExample example, @Param("selective") AdminAuthority.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_authority
     *
     * @mbg.generated
     */
    List<AdminAuthority> selectByExampleSelective(@Param("example") AdminAuthorityExample example, @Param("selective") AdminAuthority.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_authority
     *
     * @mbg.generated
     */
    List<AdminAuthority> selectByExample(AdminAuthorityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_authority
     *
     * @mbg.generated
     */
    AdminAuthority selectByPrimaryKeySelective(@Param("authorityId") Integer authorityId, @Param("selective") AdminAuthority.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_authority
     *
     * @mbg.generated
     */
    AdminAuthority selectByPrimaryKey(Integer authorityId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_authority
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") AdminAuthority record, @Param("example") AdminAuthorityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_authority
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") AdminAuthority record, @Param("example") AdminAuthorityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_authority
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(AdminAuthority record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_authority
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(AdminAuthority record);
}