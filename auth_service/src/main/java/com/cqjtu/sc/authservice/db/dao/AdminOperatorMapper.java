package com.cqjtu.sc.authservice.db.dao;

import com.cqjtu.sc.authservice.db.domain.AdminOperator;
import com.cqjtu.sc.authservice.db.domain.AdminOperatorExample;
import java.util.List;

import com.cqjtu.sc.authservice.vo.AdminVo;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
@Mapper
public interface AdminOperatorMapper {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    long countByExample(AdminOperatorExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    int deleteByExample(AdminOperatorExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer operatorId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    int insert(AdminOperator record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    int insertSelective(AdminOperator record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    AdminOperator selectOneByExample(AdminOperatorExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    AdminOperator selectOneByExampleSelective(@Param("example") AdminOperatorExample example, @Param("selective") AdminOperator.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    List<AdminOperator> selectByExampleSelective(@Param("example") AdminOperatorExample example, @Param("selective") AdminOperator.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    List<AdminOperator> selectByExample(AdminOperatorExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    AdminOperator selectByPrimaryKeySelective(@Param("operatorId") Integer operatorId, @Param("selective") AdminOperator.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    AdminOperator selectByPrimaryKey(Integer operatorId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") AdminOperator record, @Param("example") AdminOperatorExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") AdminOperator record, @Param("example") AdminOperatorExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(AdminOperator record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(AdminOperator record);

    List<AdminVo> selectAdminInfos(String username, Integer offset, Integer limit, String sort, String order1);
}