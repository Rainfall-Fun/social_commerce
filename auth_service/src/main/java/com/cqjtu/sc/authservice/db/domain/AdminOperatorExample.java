package com.cqjtu.sc.authservice.db.domain;

import java.util.ArrayList;
import java.util.List;

public class AdminOperatorExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    public AdminOperatorExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    public AdminOperatorExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    public AdminOperatorExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        AdminOperatorExample example = new AdminOperatorExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    public AdminOperatorExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    public AdminOperatorExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andOperatorIdIsNull() {
            addCriterion("operator_id is null");
            return (Criteria) this;
        }

        public Criteria andOperatorIdIsNotNull() {
            addCriterion("operator_id is not null");
            return (Criteria) this;
        }

        public Criteria andOperatorIdEqualTo(Integer value) {
            addCriterion("operator_id =", value, "operatorId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorIdEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorIdNotEqualTo(Integer value) {
            addCriterion("operator_id <>", value, "operatorId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorIdNotEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorIdGreaterThan(Integer value) {
            addCriterion("operator_id >", value, "operatorId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorIdGreaterThanColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("operator_id >=", value, "operatorId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorIdGreaterThanOrEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorIdLessThan(Integer value) {
            addCriterion("operator_id <", value, "operatorId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorIdLessThanColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorIdLessThanOrEqualTo(Integer value) {
            addCriterion("operator_id <=", value, "operatorId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorIdLessThanOrEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorIdIn(List<Integer> values) {
            addCriterion("operator_id in", values, "operatorId");
            return (Criteria) this;
        }

        public Criteria andOperatorIdNotIn(List<Integer> values) {
            addCriterion("operator_id not in", values, "operatorId");
            return (Criteria) this;
        }

        public Criteria andOperatorIdBetween(Integer value1, Integer value2) {
            addCriterion("operator_id between", value1, value2, "operatorId");
            return (Criteria) this;
        }

        public Criteria andOperatorIdNotBetween(Integer value1, Integer value2) {
            addCriterion("operator_id not between", value1, value2, "operatorId");
            return (Criteria) this;
        }

        public Criteria andActorIdIsNull() {
            addCriterion("actor_id is null");
            return (Criteria) this;
        }

        public Criteria andActorIdIsNotNull() {
            addCriterion("actor_id is not null");
            return (Criteria) this;
        }

        public Criteria andActorIdEqualTo(Integer value) {
            addCriterion("actor_id =", value, "actorId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andActorIdEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("actor_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActorIdNotEqualTo(Integer value) {
            addCriterion("actor_id <>", value, "actorId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andActorIdNotEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("actor_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActorIdGreaterThan(Integer value) {
            addCriterion("actor_id >", value, "actorId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andActorIdGreaterThanColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("actor_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActorIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("actor_id >=", value, "actorId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andActorIdGreaterThanOrEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("actor_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActorIdLessThan(Integer value) {
            addCriterion("actor_id <", value, "actorId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andActorIdLessThanColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("actor_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActorIdLessThanOrEqualTo(Integer value) {
            addCriterion("actor_id <=", value, "actorId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andActorIdLessThanOrEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("actor_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActorIdIn(List<Integer> values) {
            addCriterion("actor_id in", values, "actorId");
            return (Criteria) this;
        }

        public Criteria andActorIdNotIn(List<Integer> values) {
            addCriterion("actor_id not in", values, "actorId");
            return (Criteria) this;
        }

        public Criteria andActorIdBetween(Integer value1, Integer value2) {
            addCriterion("actor_id between", value1, value2, "actorId");
            return (Criteria) this;
        }

        public Criteria andActorIdNotBetween(Integer value1, Integer value2) {
            addCriterion("actor_id not between", value1, value2, "actorId");
            return (Criteria) this;
        }

        public Criteria andOperatorAccountIsNull() {
            addCriterion("operator_account is null");
            return (Criteria) this;
        }

        public Criteria andOperatorAccountIsNotNull() {
            addCriterion("operator_account is not null");
            return (Criteria) this;
        }

        public Criteria andOperatorAccountEqualTo(String value) {
            addCriterion("operator_account =", value, "operatorAccount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorAccountEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_account = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorAccountNotEqualTo(String value) {
            addCriterion("operator_account <>", value, "operatorAccount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorAccountNotEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_account <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorAccountGreaterThan(String value) {
            addCriterion("operator_account >", value, "operatorAccount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorAccountGreaterThanColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_account > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorAccountGreaterThanOrEqualTo(String value) {
            addCriterion("operator_account >=", value, "operatorAccount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorAccountGreaterThanOrEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_account >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorAccountLessThan(String value) {
            addCriterion("operator_account <", value, "operatorAccount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorAccountLessThanColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_account < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorAccountLessThanOrEqualTo(String value) {
            addCriterion("operator_account <=", value, "operatorAccount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorAccountLessThanOrEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_account <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorAccountLike(String value) {
            addCriterion("operator_account like", value, "operatorAccount");
            return (Criteria) this;
        }

        public Criteria andOperatorAccountNotLike(String value) {
            addCriterion("operator_account not like", value, "operatorAccount");
            return (Criteria) this;
        }

        public Criteria andOperatorAccountIn(List<String> values) {
            addCriterion("operator_account in", values, "operatorAccount");
            return (Criteria) this;
        }

        public Criteria andOperatorAccountNotIn(List<String> values) {
            addCriterion("operator_account not in", values, "operatorAccount");
            return (Criteria) this;
        }

        public Criteria andOperatorAccountBetween(String value1, String value2) {
            addCriterion("operator_account between", value1, value2, "operatorAccount");
            return (Criteria) this;
        }

        public Criteria andOperatorAccountNotBetween(String value1, String value2) {
            addCriterion("operator_account not between", value1, value2, "operatorAccount");
            return (Criteria) this;
        }

        public Criteria andOperatorPasswordIsNull() {
            addCriterion("operator_password is null");
            return (Criteria) this;
        }

        public Criteria andOperatorPasswordIsNotNull() {
            addCriterion("operator_password is not null");
            return (Criteria) this;
        }

        public Criteria andOperatorPasswordEqualTo(String value) {
            addCriterion("operator_password =", value, "operatorPassword");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorPasswordEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_password = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorPasswordNotEqualTo(String value) {
            addCriterion("operator_password <>", value, "operatorPassword");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorPasswordNotEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_password <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorPasswordGreaterThan(String value) {
            addCriterion("operator_password >", value, "operatorPassword");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorPasswordGreaterThanColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_password > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("operator_password >=", value, "operatorPassword");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorPasswordGreaterThanOrEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_password >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorPasswordLessThan(String value) {
            addCriterion("operator_password <", value, "operatorPassword");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorPasswordLessThanColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_password < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorPasswordLessThanOrEqualTo(String value) {
            addCriterion("operator_password <=", value, "operatorPassword");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorPasswordLessThanOrEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_password <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorPasswordLike(String value) {
            addCriterion("operator_password like", value, "operatorPassword");
            return (Criteria) this;
        }

        public Criteria andOperatorPasswordNotLike(String value) {
            addCriterion("operator_password not like", value, "operatorPassword");
            return (Criteria) this;
        }

        public Criteria andOperatorPasswordIn(List<String> values) {
            addCriterion("operator_password in", values, "operatorPassword");
            return (Criteria) this;
        }

        public Criteria andOperatorPasswordNotIn(List<String> values) {
            addCriterion("operator_password not in", values, "operatorPassword");
            return (Criteria) this;
        }

        public Criteria andOperatorPasswordBetween(String value1, String value2) {
            addCriterion("operator_password between", value1, value2, "operatorPassword");
            return (Criteria) this;
        }

        public Criteria andOperatorPasswordNotBetween(String value1, String value2) {
            addCriterion("operator_password not between", value1, value2, "operatorPassword");
            return (Criteria) this;
        }

        public Criteria andOperatorIsavailableIsNull() {
            addCriterion("operator_isavailable is null");
            return (Criteria) this;
        }

        public Criteria andOperatorIsavailableIsNotNull() {
            addCriterion("operator_isavailable is not null");
            return (Criteria) this;
        }

        public Criteria andOperatorIsavailableEqualTo(Integer value) {
            addCriterion("operator_isavailable =", value, "operatorIsavailable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorIsavailableEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_isavailable = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorIsavailableNotEqualTo(Integer value) {
            addCriterion("operator_isavailable <>", value, "operatorIsavailable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorIsavailableNotEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_isavailable <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorIsavailableGreaterThan(Integer value) {
            addCriterion("operator_isavailable >", value, "operatorIsavailable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorIsavailableGreaterThanColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_isavailable > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorIsavailableGreaterThanOrEqualTo(Integer value) {
            addCriterion("operator_isavailable >=", value, "operatorIsavailable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorIsavailableGreaterThanOrEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_isavailable >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorIsavailableLessThan(Integer value) {
            addCriterion("operator_isavailable <", value, "operatorIsavailable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorIsavailableLessThanColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_isavailable < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorIsavailableLessThanOrEqualTo(Integer value) {
            addCriterion("operator_isavailable <=", value, "operatorIsavailable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andOperatorIsavailableLessThanOrEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("operator_isavailable <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorIsavailableIn(List<Integer> values) {
            addCriterion("operator_isavailable in", values, "operatorIsavailable");
            return (Criteria) this;
        }

        public Criteria andOperatorIsavailableNotIn(List<Integer> values) {
            addCriterion("operator_isavailable not in", values, "operatorIsavailable");
            return (Criteria) this;
        }

        public Criteria andOperatorIsavailableBetween(Integer value1, Integer value2) {
            addCriterion("operator_isavailable between", value1, value2, "operatorIsavailable");
            return (Criteria) this;
        }

        public Criteria andOperatorIsavailableNotBetween(Integer value1, Integer value2) {
            addCriterion("operator_isavailable not between", value1, value2, "operatorIsavailable");
            return (Criteria) this;
        }

        public Criteria andSupplierIdIsNull() {
            addCriterion("supplier_id is null");
            return (Criteria) this;
        }

        public Criteria andSupplierIdIsNotNull() {
            addCriterion("supplier_id is not null");
            return (Criteria) this;
        }

        public Criteria andSupplierIdEqualTo(Integer value) {
            addCriterion("supplier_id =", value, "supplierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andSupplierIdEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("supplier_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierIdNotEqualTo(Integer value) {
            addCriterion("supplier_id <>", value, "supplierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andSupplierIdNotEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("supplier_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierIdGreaterThan(Integer value) {
            addCriterion("supplier_id >", value, "supplierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andSupplierIdGreaterThanColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("supplier_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("supplier_id >=", value, "supplierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andSupplierIdGreaterThanOrEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("supplier_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierIdLessThan(Integer value) {
            addCriterion("supplier_id <", value, "supplierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andSupplierIdLessThanColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("supplier_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierIdLessThanOrEqualTo(Integer value) {
            addCriterion("supplier_id <=", value, "supplierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria andSupplierIdLessThanOrEqualToColumn(AdminOperator.Column column) {
            addCriterion(new StringBuilder("supplier_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierIdIn(List<Integer> values) {
            addCriterion("supplier_id in", values, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdNotIn(List<Integer> values) {
            addCriterion("supplier_id not in", values, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdBetween(Integer value1, Integer value2) {
            addCriterion("supplier_id between", value1, value2, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdNotBetween(Integer value1, Integer value2) {
            addCriterion("supplier_id not between", value1, value2, "supplierId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table admin_operator
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        private AdminOperatorExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        protected Criteria(AdminOperatorExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public AdminOperatorExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table admin_operator
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table admin_operator
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table admin_operator
         *
         * @mbg.generated
         */
        void example(com.cqjtu.sc.authservice.db.domain.AdminOperatorExample example);
    }
}