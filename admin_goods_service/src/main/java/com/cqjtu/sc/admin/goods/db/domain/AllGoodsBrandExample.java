package com.cqjtu.sc.admin.goods.db.domain;

import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.List;

public class AllGoodsBrandExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    public AllGoodsBrandExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    public AllGoodsBrandExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    public AllGoodsBrandExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        AllGoodsBrandExample example = new AllGoodsBrandExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    public AllGoodsBrandExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    public AllGoodsBrandExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andBrandIdIsNull() {
            addCriterion("brand_id is null");
            return (Criteria) this;
        }

        public Criteria andBrandIdIsNotNull() {
            addCriterion("brand_id is not null");
            return (Criteria) this;
        }

        public Criteria andBrandIdEqualTo(Integer value) {
            addCriterion("brand_id =", value, "brandId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandIdEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandIdNotEqualTo(Integer value) {
            addCriterion("brand_id <>", value, "brandId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandIdNotEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandIdGreaterThan(Integer value) {
            addCriterion("brand_id >", value, "brandId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandIdGreaterThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("brand_id >=", value, "brandId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandIdGreaterThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandIdLessThan(Integer value) {
            addCriterion("brand_id <", value, "brandId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandIdLessThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandIdLessThanOrEqualTo(Integer value) {
            addCriterion("brand_id <=", value, "brandId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandIdLessThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandIdIn(List<Integer> values) {
            addCriterion("brand_id in", values, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdNotIn(List<Integer> values) {
            addCriterion("brand_id not in", values, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdBetween(Integer value1, Integer value2) {
            addCriterion("brand_id between", value1, value2, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdNotBetween(Integer value1, Integer value2) {
            addCriterion("brand_id not between", value1, value2, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandNameIsNull() {
            addCriterion("brand_name is null");
            return (Criteria) this;
        }

        public Criteria andBrandNameIsNotNull() {
            addCriterion("brand_name is not null");
            return (Criteria) this;
        }

        public Criteria andBrandNameEqualTo(String value) {
            addCriterion("brand_name =", value, "brandName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandNameEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandNameNotEqualTo(String value) {
            addCriterion("brand_name <>", value, "brandName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandNameNotEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandNameGreaterThan(String value) {
            addCriterion("brand_name >", value, "brandName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandNameGreaterThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandNameGreaterThanOrEqualTo(String value) {
            addCriterion("brand_name >=", value, "brandName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandNameGreaterThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandNameLessThan(String value) {
            addCriterion("brand_name <", value, "brandName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandNameLessThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandNameLessThanOrEqualTo(String value) {
            addCriterion("brand_name <=", value, "brandName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandNameLessThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandNameLike(String value) {
            addCriterion("brand_name like", value, "brandName");
            return (Criteria) this;
        }

        public Criteria andBrandNameNotLike(String value) {
            addCriterion("brand_name not like", value, "brandName");
            return (Criteria) this;
        }

        public Criteria andBrandNameIn(List<String> values) {
            addCriterion("brand_name in", values, "brandName");
            return (Criteria) this;
        }

        public Criteria andBrandNameNotIn(List<String> values) {
            addCriterion("brand_name not in", values, "brandName");
            return (Criteria) this;
        }

        public Criteria andBrandNameBetween(String value1, String value2) {
            addCriterion("brand_name between", value1, value2, "brandName");
            return (Criteria) this;
        }

        public Criteria andBrandNameNotBetween(String value1, String value2) {
            addCriterion("brand_name not between", value1, value2, "brandName");
            return (Criteria) this;
        }

        public Criteria andBrandUrlIsNull() {
            addCriterion("brand_url is null");
            return (Criteria) this;
        }

        public Criteria andBrandUrlIsNotNull() {
            addCriterion("brand_url is not null");
            return (Criteria) this;
        }

        public Criteria andBrandUrlEqualTo(String value) {
            addCriterion("brand_url =", value, "brandUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandUrlEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandUrlNotEqualTo(String value) {
            addCriterion("brand_url <>", value, "brandUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandUrlNotEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandUrlGreaterThan(String value) {
            addCriterion("brand_url >", value, "brandUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandUrlGreaterThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandUrlGreaterThanOrEqualTo(String value) {
            addCriterion("brand_url >=", value, "brandUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandUrlGreaterThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandUrlLessThan(String value) {
            addCriterion("brand_url <", value, "brandUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandUrlLessThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandUrlLessThanOrEqualTo(String value) {
            addCriterion("brand_url <=", value, "brandUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandUrlLessThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandUrlLike(String value) {
            addCriterion("brand_url like", value, "brandUrl");
            return (Criteria) this;
        }

        public Criteria andBrandUrlNotLike(String value) {
            addCriterion("brand_url not like", value, "brandUrl");
            return (Criteria) this;
        }

        public Criteria andBrandUrlIn(List<String> values) {
            addCriterion("brand_url in", values, "brandUrl");
            return (Criteria) this;
        }

        public Criteria andBrandUrlNotIn(List<String> values) {
            addCriterion("brand_url not in", values, "brandUrl");
            return (Criteria) this;
        }

        public Criteria andBrandUrlBetween(String value1, String value2) {
            addCriterion("brand_url between", value1, value2, "brandUrl");
            return (Criteria) this;
        }

        public Criteria andBrandUrlNotBetween(String value1, String value2) {
            addCriterion("brand_url not between", value1, value2, "brandUrl");
            return (Criteria) this;
        }

        public Criteria andBrandDescIsNull() {
            addCriterion("brand_desc is null");
            return (Criteria) this;
        }

        public Criteria andBrandDescIsNotNull() {
            addCriterion("brand_desc is not null");
            return (Criteria) this;
        }

        public Criteria andBrandDescEqualTo(String value) {
            addCriterion("brand_desc =", value, "brandDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandDescEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_desc = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandDescNotEqualTo(String value) {
            addCriterion("brand_desc <>", value, "brandDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandDescNotEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_desc <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandDescGreaterThan(String value) {
            addCriterion("brand_desc >", value, "brandDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandDescGreaterThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_desc > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandDescGreaterThanOrEqualTo(String value) {
            addCriterion("brand_desc >=", value, "brandDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandDescGreaterThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_desc >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandDescLessThan(String value) {
            addCriterion("brand_desc <", value, "brandDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandDescLessThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_desc < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandDescLessThanOrEqualTo(String value) {
            addCriterion("brand_desc <=", value, "brandDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBrandDescLessThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("brand_desc <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandDescLike(String value) {
            addCriterion("brand_desc like", value, "brandDesc");
            return (Criteria) this;
        }

        public Criteria andBrandDescNotLike(String value) {
            addCriterion("brand_desc not like", value, "brandDesc");
            return (Criteria) this;
        }

        public Criteria andBrandDescIn(List<String> values) {
            addCriterion("brand_desc in", values, "brandDesc");
            return (Criteria) this;
        }

        public Criteria andBrandDescNotIn(List<String> values) {
            addCriterion("brand_desc not in", values, "brandDesc");
            return (Criteria) this;
        }

        public Criteria andBrandDescBetween(String value1, String value2) {
            addCriterion("brand_desc between", value1, value2, "brandDesc");
            return (Criteria) this;
        }

        public Criteria andBrandDescNotBetween(String value1, String value2) {
            addCriterion("brand_desc not between", value1, value2, "brandDesc");
            return (Criteria) this;
        }

        public Criteria andBandAddTimeIsNull() {
            addCriterion("band_add_time is null");
            return (Criteria) this;
        }

        public Criteria andBandAddTimeIsNotNull() {
            addCriterion("band_add_time is not null");
            return (Criteria) this;
        }

        public Criteria andBandAddTimeEqualTo(LocalTime value) {
            addCriterion("band_add_time =", value, "bandAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandAddTimeEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandAddTimeNotEqualTo(LocalTime value) {
            addCriterion("band_add_time <>", value, "bandAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandAddTimeNotEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandAddTimeGreaterThan(LocalTime value) {
            addCriterion("band_add_time >", value, "bandAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandAddTimeGreaterThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandAddTimeGreaterThanOrEqualTo(LocalTime value) {
            addCriterion("band_add_time >=", value, "bandAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandAddTimeGreaterThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandAddTimeLessThan(LocalTime value) {
            addCriterion("band_add_time <", value, "bandAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandAddTimeLessThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandAddTimeLessThanOrEqualTo(LocalTime value) {
            addCriterion("band_add_time <=", value, "bandAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandAddTimeLessThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandAddTimeIn(List<LocalTime> values) {
            addCriterion("band_add_time in", values, "bandAddTime");
            return (Criteria) this;
        }

        public Criteria andBandAddTimeNotIn(List<LocalTime> values) {
            addCriterion("band_add_time not in", values, "bandAddTime");
            return (Criteria) this;
        }

        public Criteria andBandAddTimeBetween(LocalTime value1, LocalTime value2) {
            addCriterion("band_add_time between", value1, value2, "bandAddTime");
            return (Criteria) this;
        }

        public Criteria andBandAddTimeNotBetween(LocalTime value1, LocalTime value2) {
            addCriterion("band_add_time not between", value1, value2, "bandAddTime");
            return (Criteria) this;
        }

        public Criteria andBandAddManIsNull() {
            addCriterion("band_add_man is null");
            return (Criteria) this;
        }

        public Criteria andBandAddManIsNotNull() {
            addCriterion("band_add_man is not null");
            return (Criteria) this;
        }

        public Criteria andBandAddManEqualTo(String value) {
            addCriterion("band_add_man =", value, "bandAddMan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandAddManEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_add_man = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandAddManNotEqualTo(String value) {
            addCriterion("band_add_man <>", value, "bandAddMan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandAddManNotEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_add_man <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandAddManGreaterThan(String value) {
            addCriterion("band_add_man >", value, "bandAddMan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandAddManGreaterThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_add_man > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandAddManGreaterThanOrEqualTo(String value) {
            addCriterion("band_add_man >=", value, "bandAddMan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandAddManGreaterThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_add_man >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandAddManLessThan(String value) {
            addCriterion("band_add_man <", value, "bandAddMan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandAddManLessThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_add_man < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandAddManLessThanOrEqualTo(String value) {
            addCriterion("band_add_man <=", value, "bandAddMan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandAddManLessThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_add_man <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandAddManLike(String value) {
            addCriterion("band_add_man like", value, "bandAddMan");
            return (Criteria) this;
        }

        public Criteria andBandAddManNotLike(String value) {
            addCriterion("band_add_man not like", value, "bandAddMan");
            return (Criteria) this;
        }

        public Criteria andBandAddManIn(List<String> values) {
            addCriterion("band_add_man in", values, "bandAddMan");
            return (Criteria) this;
        }

        public Criteria andBandAddManNotIn(List<String> values) {
            addCriterion("band_add_man not in", values, "bandAddMan");
            return (Criteria) this;
        }

        public Criteria andBandAddManBetween(String value1, String value2) {
            addCriterion("band_add_man between", value1, value2, "bandAddMan");
            return (Criteria) this;
        }

        public Criteria andBandAddManNotBetween(String value1, String value2) {
            addCriterion("band_add_man not between", value1, value2, "bandAddMan");
            return (Criteria) this;
        }

        public Criteria andBandLastModifierIsNull() {
            addCriterion("band_last_modifier is null");
            return (Criteria) this;
        }

        public Criteria andBandLastModifierIsNotNull() {
            addCriterion("band_last_modifier is not null");
            return (Criteria) this;
        }

        public Criteria andBandLastModifierEqualTo(String value) {
            addCriterion("band_last_modifier =", value, "bandLastModifier");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandLastModifierEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_last_modifier = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandLastModifierNotEqualTo(String value) {
            addCriterion("band_last_modifier <>", value, "bandLastModifier");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandLastModifierNotEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_last_modifier <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandLastModifierGreaterThan(String value) {
            addCriterion("band_last_modifier >", value, "bandLastModifier");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandLastModifierGreaterThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_last_modifier > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandLastModifierGreaterThanOrEqualTo(String value) {
            addCriterion("band_last_modifier >=", value, "bandLastModifier");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandLastModifierGreaterThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_last_modifier >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandLastModifierLessThan(String value) {
            addCriterion("band_last_modifier <", value, "bandLastModifier");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandLastModifierLessThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_last_modifier < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandLastModifierLessThanOrEqualTo(String value) {
            addCriterion("band_last_modifier <=", value, "bandLastModifier");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandLastModifierLessThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_last_modifier <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandLastModifierLike(String value) {
            addCriterion("band_last_modifier like", value, "bandLastModifier");
            return (Criteria) this;
        }

        public Criteria andBandLastModifierNotLike(String value) {
            addCriterion("band_last_modifier not like", value, "bandLastModifier");
            return (Criteria) this;
        }

        public Criteria andBandLastModifierIn(List<String> values) {
            addCriterion("band_last_modifier in", values, "bandLastModifier");
            return (Criteria) this;
        }

        public Criteria andBandLastModifierNotIn(List<String> values) {
            addCriterion("band_last_modifier not in", values, "bandLastModifier");
            return (Criteria) this;
        }

        public Criteria andBandLastModifierBetween(String value1, String value2) {
            addCriterion("band_last_modifier between", value1, value2, "bandLastModifier");
            return (Criteria) this;
        }

        public Criteria andBandLastModifierNotBetween(String value1, String value2) {
            addCriterion("band_last_modifier not between", value1, value2, "bandLastModifier");
            return (Criteria) this;
        }

        public Criteria andBandLastEditTimeIsNull() {
            addCriterion("band_last_edit_time is null");
            return (Criteria) this;
        }

        public Criteria andBandLastEditTimeIsNotNull() {
            addCriterion("band_last_edit_time is not null");
            return (Criteria) this;
        }

        public Criteria andBandLastEditTimeEqualTo(LocalDateTime value) {
            addCriterion("band_last_edit_time =", value, "bandLastEditTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandLastEditTimeEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_last_edit_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandLastEditTimeNotEqualTo(LocalDateTime value) {
            addCriterion("band_last_edit_time <>", value, "bandLastEditTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandLastEditTimeNotEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_last_edit_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandLastEditTimeGreaterThan(LocalDateTime value) {
            addCriterion("band_last_edit_time >", value, "bandLastEditTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandLastEditTimeGreaterThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_last_edit_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandLastEditTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("band_last_edit_time >=", value, "bandLastEditTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandLastEditTimeGreaterThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_last_edit_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandLastEditTimeLessThan(LocalDateTime value) {
            addCriterion("band_last_edit_time <", value, "bandLastEditTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandLastEditTimeLessThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_last_edit_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandLastEditTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("band_last_edit_time <=", value, "bandLastEditTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandLastEditTimeLessThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_last_edit_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandLastEditTimeIn(List<LocalDateTime> values) {
            addCriterion("band_last_edit_time in", values, "bandLastEditTime");
            return (Criteria) this;
        }

        public Criteria andBandLastEditTimeNotIn(List<LocalDateTime> values) {
            addCriterion("band_last_edit_time not in", values, "bandLastEditTime");
            return (Criteria) this;
        }

        public Criteria andBandLastEditTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("band_last_edit_time between", value1, value2, "bandLastEditTime");
            return (Criteria) this;
        }

        public Criteria andBandLastEditTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("band_last_edit_time not between", value1, value2, "bandLastEditTime");
            return (Criteria) this;
        }

        public Criteria andBandIsDisplayIsNull() {
            addCriterion("band_is_display is null");
            return (Criteria) this;
        }

        public Criteria andBandIsDisplayIsNotNull() {
            addCriterion("band_is_display is not null");
            return (Criteria) this;
        }

        public Criteria andBandIsDisplayEqualTo(Integer value) {
            addCriterion("band_is_display =", value, "bandIsDisplay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandIsDisplayEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_is_display = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandIsDisplayNotEqualTo(Integer value) {
            addCriterion("band_is_display <>", value, "bandIsDisplay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandIsDisplayNotEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_is_display <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandIsDisplayGreaterThan(Integer value) {
            addCriterion("band_is_display >", value, "bandIsDisplay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandIsDisplayGreaterThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_is_display > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandIsDisplayGreaterThanOrEqualTo(Integer value) {
            addCriterion("band_is_display >=", value, "bandIsDisplay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandIsDisplayGreaterThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_is_display >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandIsDisplayLessThan(Integer value) {
            addCriterion("band_is_display <", value, "bandIsDisplay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandIsDisplayLessThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_is_display < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandIsDisplayLessThanOrEqualTo(Integer value) {
            addCriterion("band_is_display <=", value, "bandIsDisplay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandIsDisplayLessThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_is_display <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandIsDisplayIn(List<Integer> values) {
            addCriterion("band_is_display in", values, "bandIsDisplay");
            return (Criteria) this;
        }

        public Criteria andBandIsDisplayNotIn(List<Integer> values) {
            addCriterion("band_is_display not in", values, "bandIsDisplay");
            return (Criteria) this;
        }

        public Criteria andBandIsDisplayBetween(Integer value1, Integer value2) {
            addCriterion("band_is_display between", value1, value2, "bandIsDisplay");
            return (Criteria) this;
        }

        public Criteria andBandIsDisplayNotBetween(Integer value1, Integer value2) {
            addCriterion("band_is_display not between", value1, value2, "bandIsDisplay");
            return (Criteria) this;
        }

        public Criteria andBandLogoIsNull() {
            addCriterion("band_logo is null");
            return (Criteria) this;
        }

        public Criteria andBandLogoIsNotNull() {
            addCriterion("band_logo is not null");
            return (Criteria) this;
        }

        public Criteria andBandLogoEqualTo(String value) {
            addCriterion("band_logo =", value, "bandLogo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandLogoEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_logo = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandLogoNotEqualTo(String value) {
            addCriterion("band_logo <>", value, "bandLogo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandLogoNotEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_logo <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandLogoGreaterThan(String value) {
            addCriterion("band_logo >", value, "bandLogo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandLogoGreaterThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_logo > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandLogoGreaterThanOrEqualTo(String value) {
            addCriterion("band_logo >=", value, "bandLogo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandLogoGreaterThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_logo >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandLogoLessThan(String value) {
            addCriterion("band_logo <", value, "bandLogo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandLogoLessThanColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_logo < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandLogoLessThanOrEqualTo(String value) {
            addCriterion("band_logo <=", value, "bandLogo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria andBandLogoLessThanOrEqualToColumn(AllGoodsBrand.Column column) {
            addCriterion(new StringBuilder("band_logo <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBandLogoLike(String value) {
            addCriterion("band_logo like", value, "bandLogo");
            return (Criteria) this;
        }

        public Criteria andBandLogoNotLike(String value) {
            addCriterion("band_logo not like", value, "bandLogo");
            return (Criteria) this;
        }

        public Criteria andBandLogoIn(List<String> values) {
            addCriterion("band_logo in", values, "bandLogo");
            return (Criteria) this;
        }

        public Criteria andBandLogoNotIn(List<String> values) {
            addCriterion("band_logo not in", values, "bandLogo");
            return (Criteria) this;
        }

        public Criteria andBandLogoBetween(String value1, String value2) {
            addCriterion("band_logo between", value1, value2, "bandLogo");
            return (Criteria) this;
        }

        public Criteria andBandLogoNotBetween(String value1, String value2) {
            addCriterion("band_logo not between", value1, value2, "bandLogo");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_goods_brand
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        private AllGoodsBrandExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        protected Criteria(AllGoodsBrandExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public AllGoodsBrandExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table all_goods_brand
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_goods_brand
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_brand
         *
         * @mbg.generated
         */
        void example(com.cqjtu.sc.admin.goods.db.domain.AllGoodsBrandExample example);
    }
}