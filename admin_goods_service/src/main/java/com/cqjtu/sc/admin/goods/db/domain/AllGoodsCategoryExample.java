package com.cqjtu.sc.admin.goods.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class AllGoodsCategoryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    public AllGoodsCategoryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    public AllGoodsCategoryExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    public AllGoodsCategoryExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        AllGoodsCategoryExample example = new AllGoodsCategoryExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    public AllGoodsCategoryExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    public AllGoodsCategoryExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCategoryIdIsNull() {
            addCriterion("category_id is null");
            return (Criteria) this;
        }

        public Criteria andCategoryIdIsNotNull() {
            addCriterion("category_id is not null");
            return (Criteria) this;
        }

        public Criteria andCategoryIdEqualTo(Integer value) {
            addCriterion("category_id =", value, "categoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryIdEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIdNotEqualTo(Integer value) {
            addCriterion("category_id <>", value, "categoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryIdNotEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIdGreaterThan(Integer value) {
            addCriterion("category_id >", value, "categoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryIdGreaterThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("category_id >=", value, "categoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryIdGreaterThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIdLessThan(Integer value) {
            addCriterion("category_id <", value, "categoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryIdLessThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIdLessThanOrEqualTo(Integer value) {
            addCriterion("category_id <=", value, "categoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryIdLessThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIdIn(List<Integer> values) {
            addCriterion("category_id in", values, "categoryId");
            return (Criteria) this;
        }

        public Criteria andCategoryIdNotIn(List<Integer> values) {
            addCriterion("category_id not in", values, "categoryId");
            return (Criteria) this;
        }

        public Criteria andCategoryIdBetween(Integer value1, Integer value2) {
            addCriterion("category_id between", value1, value2, "categoryId");
            return (Criteria) this;
        }

        public Criteria andCategoryIdNotBetween(Integer value1, Integer value2) {
            addCriterion("category_id not between", value1, value2, "categoryId");
            return (Criteria) this;
        }

        public Criteria andCategoryNameIsNull() {
            addCriterion("category_name is null");
            return (Criteria) this;
        }

        public Criteria andCategoryNameIsNotNull() {
            addCriterion("category_name is not null");
            return (Criteria) this;
        }

        public Criteria andCategoryNameEqualTo(String value) {
            addCriterion("category_name =", value, "categoryName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryNameEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryNameNotEqualTo(String value) {
            addCriterion("category_name <>", value, "categoryName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryNameNotEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryNameGreaterThan(String value) {
            addCriterion("category_name >", value, "categoryName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryNameGreaterThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryNameGreaterThanOrEqualTo(String value) {
            addCriterion("category_name >=", value, "categoryName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryNameGreaterThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryNameLessThan(String value) {
            addCriterion("category_name <", value, "categoryName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryNameLessThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryNameLessThanOrEqualTo(String value) {
            addCriterion("category_name <=", value, "categoryName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryNameLessThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryNameLike(String value) {
            addCriterion("category_name like", value, "categoryName");
            return (Criteria) this;
        }

        public Criteria andCategoryNameNotLike(String value) {
            addCriterion("category_name not like", value, "categoryName");
            return (Criteria) this;
        }

        public Criteria andCategoryNameIn(List<String> values) {
            addCriterion("category_name in", values, "categoryName");
            return (Criteria) this;
        }

        public Criteria andCategoryNameNotIn(List<String> values) {
            addCriterion("category_name not in", values, "categoryName");
            return (Criteria) this;
        }

        public Criteria andCategoryNameBetween(String value1, String value2) {
            addCriterion("category_name between", value1, value2, "categoryName");
            return (Criteria) this;
        }

        public Criteria andCategoryNameNotBetween(String value1, String value2) {
            addCriterion("category_name not between", value1, value2, "categoryName");
            return (Criteria) this;
        }

        public Criteria andParentCategoryIdIsNull() {
            addCriterion("parent_category_id is null");
            return (Criteria) this;
        }

        public Criteria andParentCategoryIdIsNotNull() {
            addCriterion("parent_category_id is not null");
            return (Criteria) this;
        }

        public Criteria andParentCategoryIdEqualTo(Integer value) {
            addCriterion("parent_category_id =", value, "parentCategoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andParentCategoryIdEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("parent_category_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andParentCategoryIdNotEqualTo(Integer value) {
            addCriterion("parent_category_id <>", value, "parentCategoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andParentCategoryIdNotEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("parent_category_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andParentCategoryIdGreaterThan(Integer value) {
            addCriterion("parent_category_id >", value, "parentCategoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andParentCategoryIdGreaterThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("parent_category_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andParentCategoryIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("parent_category_id >=", value, "parentCategoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andParentCategoryIdGreaterThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("parent_category_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andParentCategoryIdLessThan(Integer value) {
            addCriterion("parent_category_id <", value, "parentCategoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andParentCategoryIdLessThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("parent_category_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andParentCategoryIdLessThanOrEqualTo(Integer value) {
            addCriterion("parent_category_id <=", value, "parentCategoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andParentCategoryIdLessThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("parent_category_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andParentCategoryIdIn(List<Integer> values) {
            addCriterion("parent_category_id in", values, "parentCategoryId");
            return (Criteria) this;
        }

        public Criteria andParentCategoryIdNotIn(List<Integer> values) {
            addCriterion("parent_category_id not in", values, "parentCategoryId");
            return (Criteria) this;
        }

        public Criteria andParentCategoryIdBetween(Integer value1, Integer value2) {
            addCriterion("parent_category_id between", value1, value2, "parentCategoryId");
            return (Criteria) this;
        }

        public Criteria andParentCategoryIdNotBetween(Integer value1, Integer value2) {
            addCriterion("parent_category_id not between", value1, value2, "parentCategoryId");
            return (Criteria) this;
        }

        public Criteria andCategoryLevelIsNull() {
            addCriterion("category_level is null");
            return (Criteria) this;
        }

        public Criteria andCategoryLevelIsNotNull() {
            addCriterion("category_level is not null");
            return (Criteria) this;
        }

        public Criteria andCategoryLevelEqualTo(Integer value) {
            addCriterion("category_level =", value, "categoryLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryLevelEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_level = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryLevelNotEqualTo(Integer value) {
            addCriterion("category_level <>", value, "categoryLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryLevelNotEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_level <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryLevelGreaterThan(Integer value) {
            addCriterion("category_level >", value, "categoryLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryLevelGreaterThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_level > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryLevelGreaterThanOrEqualTo(Integer value) {
            addCriterion("category_level >=", value, "categoryLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryLevelGreaterThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_level >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryLevelLessThan(Integer value) {
            addCriterion("category_level <", value, "categoryLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryLevelLessThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_level < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryLevelLessThanOrEqualTo(Integer value) {
            addCriterion("category_level <=", value, "categoryLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryLevelLessThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_level <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryLevelIn(List<Integer> values) {
            addCriterion("category_level in", values, "categoryLevel");
            return (Criteria) this;
        }

        public Criteria andCategoryLevelNotIn(List<Integer> values) {
            addCriterion("category_level not in", values, "categoryLevel");
            return (Criteria) this;
        }

        public Criteria andCategoryLevelBetween(Integer value1, Integer value2) {
            addCriterion("category_level between", value1, value2, "categoryLevel");
            return (Criteria) this;
        }

        public Criteria andCategoryLevelNotBetween(Integer value1, Integer value2) {
            addCriterion("category_level not between", value1, value2, "categoryLevel");
            return (Criteria) this;
        }

        public Criteria andCategoryDescIsNull() {
            addCriterion("category_desc is null");
            return (Criteria) this;
        }

        public Criteria andCategoryDescIsNotNull() {
            addCriterion("category_desc is not null");
            return (Criteria) this;
        }

        public Criteria andCategoryDescEqualTo(String value) {
            addCriterion("category_desc =", value, "categoryDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryDescEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_desc = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryDescNotEqualTo(String value) {
            addCriterion("category_desc <>", value, "categoryDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryDescNotEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_desc <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryDescGreaterThan(String value) {
            addCriterion("category_desc >", value, "categoryDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryDescGreaterThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_desc > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryDescGreaterThanOrEqualTo(String value) {
            addCriterion("category_desc >=", value, "categoryDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryDescGreaterThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_desc >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryDescLessThan(String value) {
            addCriterion("category_desc <", value, "categoryDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryDescLessThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_desc < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryDescLessThanOrEqualTo(String value) {
            addCriterion("category_desc <=", value, "categoryDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryDescLessThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_desc <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryDescLike(String value) {
            addCriterion("category_desc like", value, "categoryDesc");
            return (Criteria) this;
        }

        public Criteria andCategoryDescNotLike(String value) {
            addCriterion("category_desc not like", value, "categoryDesc");
            return (Criteria) this;
        }

        public Criteria andCategoryDescIn(List<String> values) {
            addCriterion("category_desc in", values, "categoryDesc");
            return (Criteria) this;
        }

        public Criteria andCategoryDescNotIn(List<String> values) {
            addCriterion("category_desc not in", values, "categoryDesc");
            return (Criteria) this;
        }

        public Criteria andCategoryDescBetween(String value1, String value2) {
            addCriterion("category_desc between", value1, value2, "categoryDesc");
            return (Criteria) this;
        }

        public Criteria andCategoryDescNotBetween(String value1, String value2) {
            addCriterion("category_desc not between", value1, value2, "categoryDesc");
            return (Criteria) this;
        }

        public Criteria andImageUrlIsNull() {
            addCriterion("image_url is null");
            return (Criteria) this;
        }

        public Criteria andImageUrlIsNotNull() {
            addCriterion("image_url is not null");
            return (Criteria) this;
        }

        public Criteria andImageUrlEqualTo(String value) {
            addCriterion("image_url =", value, "imageUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andImageUrlEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("image_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImageUrlNotEqualTo(String value) {
            addCriterion("image_url <>", value, "imageUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andImageUrlNotEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("image_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImageUrlGreaterThan(String value) {
            addCriterion("image_url >", value, "imageUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andImageUrlGreaterThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("image_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImageUrlGreaterThanOrEqualTo(String value) {
            addCriterion("image_url >=", value, "imageUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andImageUrlGreaterThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("image_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImageUrlLessThan(String value) {
            addCriterion("image_url <", value, "imageUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andImageUrlLessThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("image_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImageUrlLessThanOrEqualTo(String value) {
            addCriterion("image_url <=", value, "imageUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andImageUrlLessThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("image_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImageUrlLike(String value) {
            addCriterion("image_url like", value, "imageUrl");
            return (Criteria) this;
        }

        public Criteria andImageUrlNotLike(String value) {
            addCriterion("image_url not like", value, "imageUrl");
            return (Criteria) this;
        }

        public Criteria andImageUrlIn(List<String> values) {
            addCriterion("image_url in", values, "imageUrl");
            return (Criteria) this;
        }

        public Criteria andImageUrlNotIn(List<String> values) {
            addCriterion("image_url not in", values, "imageUrl");
            return (Criteria) this;
        }

        public Criteria andImageUrlBetween(String value1, String value2) {
            addCriterion("image_url between", value1, value2, "imageUrl");
            return (Criteria) this;
        }

        public Criteria andImageUrlNotBetween(String value1, String value2) {
            addCriterion("image_url not between", value1, value2, "imageUrl");
            return (Criteria) this;
        }

        public Criteria andCategoryIsValidIsNull() {
            addCriterion("category_is_valid is null");
            return (Criteria) this;
        }

        public Criteria andCategoryIsValidIsNotNull() {
            addCriterion("category_is_valid is not null");
            return (Criteria) this;
        }

        public Criteria andCategoryIsValidEqualTo(Integer value) {
            addCriterion("category_is_valid =", value, "categoryIsValid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryIsValidEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_is_valid = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIsValidNotEqualTo(Integer value) {
            addCriterion("category_is_valid <>", value, "categoryIsValid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryIsValidNotEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_is_valid <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIsValidGreaterThan(Integer value) {
            addCriterion("category_is_valid >", value, "categoryIsValid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryIsValidGreaterThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_is_valid > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIsValidGreaterThanOrEqualTo(Integer value) {
            addCriterion("category_is_valid >=", value, "categoryIsValid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryIsValidGreaterThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_is_valid >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIsValidLessThan(Integer value) {
            addCriterion("category_is_valid <", value, "categoryIsValid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryIsValidLessThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_is_valid < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIsValidLessThanOrEqualTo(Integer value) {
            addCriterion("category_is_valid <=", value, "categoryIsValid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryIsValidLessThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_is_valid <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIsValidIn(List<Integer> values) {
            addCriterion("category_is_valid in", values, "categoryIsValid");
            return (Criteria) this;
        }

        public Criteria andCategoryIsValidNotIn(List<Integer> values) {
            addCriterion("category_is_valid not in", values, "categoryIsValid");
            return (Criteria) this;
        }

        public Criteria andCategoryIsValidBetween(Integer value1, Integer value2) {
            addCriterion("category_is_valid between", value1, value2, "categoryIsValid");
            return (Criteria) this;
        }

        public Criteria andCategoryIsValidNotBetween(Integer value1, Integer value2) {
            addCriterion("category_is_valid not between", value1, value2, "categoryIsValid");
            return (Criteria) this;
        }

        public Criteria andCategoryAddTimeIsNull() {
            addCriterion("category_add_time is null");
            return (Criteria) this;
        }

        public Criteria andCategoryAddTimeIsNotNull() {
            addCriterion("category_add_time is not null");
            return (Criteria) this;
        }

        public Criteria andCategoryAddTimeEqualTo(LocalDateTime value) {
            addCriterion("category_add_time =", value, "categoryAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryAddTimeEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("category_add_time <>", value, "categoryAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryAddTimeNotEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("category_add_time >", value, "categoryAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryAddTimeGreaterThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("category_add_time >=", value, "categoryAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryAddTimeGreaterThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryAddTimeLessThan(LocalDateTime value) {
            addCriterion("category_add_time <", value, "categoryAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryAddTimeLessThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("category_add_time <=", value, "categoryAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryAddTimeLessThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryAddTimeIn(List<LocalDateTime> values) {
            addCriterion("category_add_time in", values, "categoryAddTime");
            return (Criteria) this;
        }

        public Criteria andCategoryAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("category_add_time not in", values, "categoryAddTime");
            return (Criteria) this;
        }

        public Criteria andCategoryAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("category_add_time between", value1, value2, "categoryAddTime");
            return (Criteria) this;
        }

        public Criteria andCategoryAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("category_add_time not between", value1, value2, "categoryAddTime");
            return (Criteria) this;
        }

        public Criteria andCategoryAddManIsNull() {
            addCriterion("category_add_man is null");
            return (Criteria) this;
        }

        public Criteria andCategoryAddManIsNotNull() {
            addCriterion("category_add_man is not null");
            return (Criteria) this;
        }

        public Criteria andCategoryAddManEqualTo(String value) {
            addCriterion("category_add_man =", value, "categoryAddMan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryAddManEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_add_man = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryAddManNotEqualTo(String value) {
            addCriterion("category_add_man <>", value, "categoryAddMan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryAddManNotEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_add_man <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryAddManGreaterThan(String value) {
            addCriterion("category_add_man >", value, "categoryAddMan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryAddManGreaterThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_add_man > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryAddManGreaterThanOrEqualTo(String value) {
            addCriterion("category_add_man >=", value, "categoryAddMan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryAddManGreaterThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_add_man >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryAddManLessThan(String value) {
            addCriterion("category_add_man <", value, "categoryAddMan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryAddManLessThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_add_man < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryAddManLessThanOrEqualTo(String value) {
            addCriterion("category_add_man <=", value, "categoryAddMan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryAddManLessThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_add_man <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryAddManLike(String value) {
            addCriterion("category_add_man like", value, "categoryAddMan");
            return (Criteria) this;
        }

        public Criteria andCategoryAddManNotLike(String value) {
            addCriterion("category_add_man not like", value, "categoryAddMan");
            return (Criteria) this;
        }

        public Criteria andCategoryAddManIn(List<String> values) {
            addCriterion("category_add_man in", values, "categoryAddMan");
            return (Criteria) this;
        }

        public Criteria andCategoryAddManNotIn(List<String> values) {
            addCriterion("category_add_man not in", values, "categoryAddMan");
            return (Criteria) this;
        }

        public Criteria andCategoryAddManBetween(String value1, String value2) {
            addCriterion("category_add_man between", value1, value2, "categoryAddMan");
            return (Criteria) this;
        }

        public Criteria andCategoryAddManNotBetween(String value1, String value2) {
            addCriterion("category_add_man not between", value1, value2, "categoryAddMan");
            return (Criteria) this;
        }

        public Criteria andCategoryLastModifierIsNull() {
            addCriterion("category_last_modifier is null");
            return (Criteria) this;
        }

        public Criteria andCategoryLastModifierIsNotNull() {
            addCriterion("category_last_modifier is not null");
            return (Criteria) this;
        }

        public Criteria andCategoryLastModifierEqualTo(String value) {
            addCriterion("category_last_modifier =", value, "categoryLastModifier");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryLastModifierEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_last_modifier = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryLastModifierNotEqualTo(String value) {
            addCriterion("category_last_modifier <>", value, "categoryLastModifier");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryLastModifierNotEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_last_modifier <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryLastModifierGreaterThan(String value) {
            addCriterion("category_last_modifier >", value, "categoryLastModifier");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryLastModifierGreaterThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_last_modifier > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryLastModifierGreaterThanOrEqualTo(String value) {
            addCriterion("category_last_modifier >=", value, "categoryLastModifier");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryLastModifierGreaterThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_last_modifier >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryLastModifierLessThan(String value) {
            addCriterion("category_last_modifier <", value, "categoryLastModifier");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryLastModifierLessThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_last_modifier < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryLastModifierLessThanOrEqualTo(String value) {
            addCriterion("category_last_modifier <=", value, "categoryLastModifier");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryLastModifierLessThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_last_modifier <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryLastModifierLike(String value) {
            addCriterion("category_last_modifier like", value, "categoryLastModifier");
            return (Criteria) this;
        }

        public Criteria andCategoryLastModifierNotLike(String value) {
            addCriterion("category_last_modifier not like", value, "categoryLastModifier");
            return (Criteria) this;
        }

        public Criteria andCategoryLastModifierIn(List<String> values) {
            addCriterion("category_last_modifier in", values, "categoryLastModifier");
            return (Criteria) this;
        }

        public Criteria andCategoryLastModifierNotIn(List<String> values) {
            addCriterion("category_last_modifier not in", values, "categoryLastModifier");
            return (Criteria) this;
        }

        public Criteria andCategoryLastModifierBetween(String value1, String value2) {
            addCriterion("category_last_modifier between", value1, value2, "categoryLastModifier");
            return (Criteria) this;
        }

        public Criteria andCategoryLastModifierNotBetween(String value1, String value2) {
            addCriterion("category_last_modifier not between", value1, value2, "categoryLastModifier");
            return (Criteria) this;
        }

        public Criteria andCategoryLastEditTimeIsNull() {
            addCriterion("category_last_edit_time is null");
            return (Criteria) this;
        }

        public Criteria andCategoryLastEditTimeIsNotNull() {
            addCriterion("category_last_edit_time is not null");
            return (Criteria) this;
        }

        public Criteria andCategoryLastEditTimeEqualTo(LocalDateTime value) {
            addCriterion("category_last_edit_time =", value, "categoryLastEditTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryLastEditTimeEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_last_edit_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryLastEditTimeNotEqualTo(LocalDateTime value) {
            addCriterion("category_last_edit_time <>", value, "categoryLastEditTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryLastEditTimeNotEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_last_edit_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryLastEditTimeGreaterThan(LocalDateTime value) {
            addCriterion("category_last_edit_time >", value, "categoryLastEditTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryLastEditTimeGreaterThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_last_edit_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryLastEditTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("category_last_edit_time >=", value, "categoryLastEditTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryLastEditTimeGreaterThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_last_edit_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryLastEditTimeLessThan(LocalDateTime value) {
            addCriterion("category_last_edit_time <", value, "categoryLastEditTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryLastEditTimeLessThanColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_last_edit_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryLastEditTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("category_last_edit_time <=", value, "categoryLastEditTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria andCategoryLastEditTimeLessThanOrEqualToColumn(AllGoodsCategory.Column column) {
            addCriterion(new StringBuilder("category_last_edit_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryLastEditTimeIn(List<LocalDateTime> values) {
            addCriterion("category_last_edit_time in", values, "categoryLastEditTime");
            return (Criteria) this;
        }

        public Criteria andCategoryLastEditTimeNotIn(List<LocalDateTime> values) {
            addCriterion("category_last_edit_time not in", values, "categoryLastEditTime");
            return (Criteria) this;
        }

        public Criteria andCategoryLastEditTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("category_last_edit_time between", value1, value2, "categoryLastEditTime");
            return (Criteria) this;
        }

        public Criteria andCategoryLastEditTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("category_last_edit_time not between", value1, value2, "categoryLastEditTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_goods_category
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        private AllGoodsCategoryExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        protected Criteria(AllGoodsCategoryExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public AllGoodsCategoryExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table all_goods_category
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_goods_category
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_category
         *
         * @mbg.generated
         */
        void example(com.cqjtu.sc.admin.goods.db.domain.AllGoodsCategoryExample example);
    }
}