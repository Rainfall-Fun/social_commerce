package com.cqjtu.sc.admin.goods.db.domain;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

public class AllCarrigeRuleConsistExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    public AllCarrigeRuleConsistExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    public AllCarrigeRuleConsistExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    public AllCarrigeRuleConsistExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        AllCarrigeRuleConsistExample example = new AllCarrigeRuleConsistExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    public AllCarrigeRuleConsistExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    public AllCarrigeRuleConsistExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCarrigeRuleIdIsNull() {
            addCriterion("carrige_rule_id is null");
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleIdIsNotNull() {
            addCriterion("carrige_rule_id is not null");
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleIdEqualTo(Integer value) {
            addCriterion("carrige_rule_id =", value, "carrigeRuleId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarrigeRuleIdEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carrige_rule_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleIdNotEqualTo(Integer value) {
            addCriterion("carrige_rule_id <>", value, "carrigeRuleId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarrigeRuleIdNotEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carrige_rule_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleIdGreaterThan(Integer value) {
            addCriterion("carrige_rule_id >", value, "carrigeRuleId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarrigeRuleIdGreaterThanColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carrige_rule_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("carrige_rule_id >=", value, "carrigeRuleId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarrigeRuleIdGreaterThanOrEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carrige_rule_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleIdLessThan(Integer value) {
            addCriterion("carrige_rule_id <", value, "carrigeRuleId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarrigeRuleIdLessThanColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carrige_rule_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleIdLessThanOrEqualTo(Integer value) {
            addCriterion("carrige_rule_id <=", value, "carrigeRuleId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarrigeRuleIdLessThanOrEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carrige_rule_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleIdIn(List<Integer> values) {
            addCriterion("carrige_rule_id in", values, "carrigeRuleId");
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleIdNotIn(List<Integer> values) {
            addCriterion("carrige_rule_id not in", values, "carrigeRuleId");
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleIdBetween(Integer value1, Integer value2) {
            addCriterion("carrige_rule_id between", value1, value2, "carrigeRuleId");
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("carrige_rule_id not between", value1, value2, "carrigeRuleId");
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdIsNull() {
            addCriterion("carriage_rule_id is null");
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdIsNotNull() {
            addCriterion("carriage_rule_id is not null");
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdEqualTo(Integer value) {
            addCriterion("carriage_rule_id =", value, "carriageRuleId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarriageRuleIdEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carriage_rule_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdNotEqualTo(Integer value) {
            addCriterion("carriage_rule_id <>", value, "carriageRuleId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarriageRuleIdNotEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carriage_rule_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdGreaterThan(Integer value) {
            addCriterion("carriage_rule_id >", value, "carriageRuleId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarriageRuleIdGreaterThanColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carriage_rule_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("carriage_rule_id >=", value, "carriageRuleId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarriageRuleIdGreaterThanOrEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carriage_rule_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdLessThan(Integer value) {
            addCriterion("carriage_rule_id <", value, "carriageRuleId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarriageRuleIdLessThanColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carriage_rule_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdLessThanOrEqualTo(Integer value) {
            addCriterion("carriage_rule_id <=", value, "carriageRuleId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarriageRuleIdLessThanOrEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carriage_rule_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdIn(List<Integer> values) {
            addCriterion("carriage_rule_id in", values, "carriageRuleId");
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdNotIn(List<Integer> values) {
            addCriterion("carriage_rule_id not in", values, "carriageRuleId");
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdBetween(Integer value1, Integer value2) {
            addCriterion("carriage_rule_id between", value1, value2, "carriageRuleId");
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("carriage_rule_id not between", value1, value2, "carriageRuleId");
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleIsNull() {
            addCriterion("carrige_rule is null");
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleIsNotNull() {
            addCriterion("carrige_rule is not null");
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleEqualTo(String value) {
            addCriterion("carrige_rule =", value, "carrigeRule");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarrigeRuleEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carrige_rule = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleNotEqualTo(String value) {
            addCriterion("carrige_rule <>", value, "carrigeRule");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarrigeRuleNotEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carrige_rule <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleGreaterThan(String value) {
            addCriterion("carrige_rule >", value, "carrigeRule");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarrigeRuleGreaterThanColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carrige_rule > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleGreaterThanOrEqualTo(String value) {
            addCriterion("carrige_rule >=", value, "carrigeRule");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarrigeRuleGreaterThanOrEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carrige_rule >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleLessThan(String value) {
            addCriterion("carrige_rule <", value, "carrigeRule");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarrigeRuleLessThanColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carrige_rule < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleLessThanOrEqualTo(String value) {
            addCriterion("carrige_rule <=", value, "carrigeRule");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarrigeRuleLessThanOrEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carrige_rule <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleLike(String value) {
            addCriterion("carrige_rule like", value, "carrigeRule");
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleNotLike(String value) {
            addCriterion("carrige_rule not like", value, "carrigeRule");
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleIn(List<String> values) {
            addCriterion("carrige_rule in", values, "carrigeRule");
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleNotIn(List<String> values) {
            addCriterion("carrige_rule not in", values, "carrigeRule");
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleBetween(String value1, String value2) {
            addCriterion("carrige_rule between", value1, value2, "carrigeRule");
            return (Criteria) this;
        }

        public Criteria andCarrigeRuleNotBetween(String value1, String value2) {
            addCriterion("carrige_rule not between", value1, value2, "carrigeRule");
            return (Criteria) this;
        }

        public Criteria andCostIsNull() {
            addCriterion("cost is null");
            return (Criteria) this;
        }

        public Criteria andCostIsNotNull() {
            addCriterion("cost is not null");
            return (Criteria) this;
        }

        public Criteria andCostEqualTo(BigDecimal value) {
            addCriterion("cost =", value, "cost");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCostEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("cost = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCostNotEqualTo(BigDecimal value) {
            addCriterion("cost <>", value, "cost");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCostNotEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("cost <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCostGreaterThan(BigDecimal value) {
            addCriterion("cost >", value, "cost");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCostGreaterThanColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("cost > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCostGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("cost >=", value, "cost");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCostGreaterThanOrEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("cost >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCostLessThan(BigDecimal value) {
            addCriterion("cost <", value, "cost");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCostLessThanColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("cost < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCostLessThanOrEqualTo(BigDecimal value) {
            addCriterion("cost <=", value, "cost");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCostLessThanOrEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("cost <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCostIn(List<BigDecimal> values) {
            addCriterion("cost in", values, "cost");
            return (Criteria) this;
        }

        public Criteria andCostNotIn(List<BigDecimal> values) {
            addCriterion("cost not in", values, "cost");
            return (Criteria) this;
        }

        public Criteria andCostBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cost between", value1, value2, "cost");
            return (Criteria) this;
        }

        public Criteria andCostNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cost not between", value1, value2, "cost");
            return (Criteria) this;
        }

        public Criteria andSettingTimeIsNull() {
            addCriterion("setting_time is null");
            return (Criteria) this;
        }

        public Criteria andSettingTimeIsNotNull() {
            addCriterion("setting_time is not null");
            return (Criteria) this;
        }

        public Criteria andSettingTimeEqualTo(LocalDate value) {
            addCriterion("setting_time =", value, "settingTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andSettingTimeEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("setting_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSettingTimeNotEqualTo(LocalDate value) {
            addCriterion("setting_time <>", value, "settingTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andSettingTimeNotEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("setting_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSettingTimeGreaterThan(LocalDate value) {
            addCriterion("setting_time >", value, "settingTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andSettingTimeGreaterThanColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("setting_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSettingTimeGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("setting_time >=", value, "settingTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andSettingTimeGreaterThanOrEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("setting_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSettingTimeLessThan(LocalDate value) {
            addCriterion("setting_time <", value, "settingTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andSettingTimeLessThanColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("setting_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSettingTimeLessThanOrEqualTo(LocalDate value) {
            addCriterion("setting_time <=", value, "settingTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andSettingTimeLessThanOrEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("setting_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSettingTimeIn(List<LocalDate> values) {
            addCriterion("setting_time in", values, "settingTime");
            return (Criteria) this;
        }

        public Criteria andSettingTimeNotIn(List<LocalDate> values) {
            addCriterion("setting_time not in", values, "settingTime");
            return (Criteria) this;
        }

        public Criteria andSettingTimeBetween(LocalDate value1, LocalDate value2) {
            addCriterion("setting_time between", value1, value2, "settingTime");
            return (Criteria) this;
        }

        public Criteria andSettingTimeNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("setting_time not between", value1, value2, "settingTime");
            return (Criteria) this;
        }

        public Criteria andCarrigeIsValidIsNull() {
            addCriterion("carrige_is_valid is null");
            return (Criteria) this;
        }

        public Criteria andCarrigeIsValidIsNotNull() {
            addCriterion("carrige_is_valid is not null");
            return (Criteria) this;
        }

        public Criteria andCarrigeIsValidEqualTo(Integer value) {
            addCriterion("carrige_is_valid =", value, "carrigeIsValid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarrigeIsValidEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carrige_is_valid = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarrigeIsValidNotEqualTo(Integer value) {
            addCriterion("carrige_is_valid <>", value, "carrigeIsValid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarrigeIsValidNotEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carrige_is_valid <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarrigeIsValidGreaterThan(Integer value) {
            addCriterion("carrige_is_valid >", value, "carrigeIsValid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarrigeIsValidGreaterThanColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carrige_is_valid > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarrigeIsValidGreaterThanOrEqualTo(Integer value) {
            addCriterion("carrige_is_valid >=", value, "carrigeIsValid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarrigeIsValidGreaterThanOrEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carrige_is_valid >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarrigeIsValidLessThan(Integer value) {
            addCriterion("carrige_is_valid <", value, "carrigeIsValid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarrigeIsValidLessThanColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carrige_is_valid < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarrigeIsValidLessThanOrEqualTo(Integer value) {
            addCriterion("carrige_is_valid <=", value, "carrigeIsValid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria andCarrigeIsValidLessThanOrEqualToColumn(AllCarrigeRuleConsist.Column column) {
            addCriterion(new StringBuilder("carrige_is_valid <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarrigeIsValidIn(List<Integer> values) {
            addCriterion("carrige_is_valid in", values, "carrigeIsValid");
            return (Criteria) this;
        }

        public Criteria andCarrigeIsValidNotIn(List<Integer> values) {
            addCriterion("carrige_is_valid not in", values, "carrigeIsValid");
            return (Criteria) this;
        }

        public Criteria andCarrigeIsValidBetween(Integer value1, Integer value2) {
            addCriterion("carrige_is_valid between", value1, value2, "carrigeIsValid");
            return (Criteria) this;
        }

        public Criteria andCarrigeIsValidNotBetween(Integer value1, Integer value2) {
            addCriterion("carrige_is_valid not between", value1, value2, "carrigeIsValid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        private AllCarrigeRuleConsistExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        protected Criteria(AllCarrigeRuleConsistExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public AllCarrigeRuleConsistExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table all_carrige_rule_consist
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_carrige_rule_consist
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_rule_consist
         *
         * @mbg.generated
         */
        void example(com.cqjtu.sc.admin.goods.db.domain.AllCarrigeRuleConsistExample example);
    }
}