package com.cqjtu.sc.admin.goods.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class AllSupplierExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    public AllSupplierExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    public AllSupplierExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    public AllSupplierExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        AllSupplierExample example = new AllSupplierExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    public AllSupplierExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    public AllSupplierExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSupplierIdIsNull() {
            addCriterion("supplier_id is null");
            return (Criteria) this;
        }

        public Criteria andSupplierIdIsNotNull() {
            addCriterion("supplier_id is not null");
            return (Criteria) this;
        }

        public Criteria andSupplierIdEqualTo(Integer value) {
            addCriterion("supplier_id =", value, "supplierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierIdEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierIdNotEqualTo(Integer value) {
            addCriterion("supplier_id <>", value, "supplierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierIdNotEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierIdGreaterThan(Integer value) {
            addCriterion("supplier_id >", value, "supplierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierIdGreaterThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("supplier_id >=", value, "supplierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierIdGreaterThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierIdLessThan(Integer value) {
            addCriterion("supplier_id <", value, "supplierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierIdLessThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierIdLessThanOrEqualTo(Integer value) {
            addCriterion("supplier_id <=", value, "supplierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierIdLessThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierIdIn(List<Integer> values) {
            addCriterion("supplier_id in", values, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdNotIn(List<Integer> values) {
            addCriterion("supplier_id not in", values, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdBetween(Integer value1, Integer value2) {
            addCriterion("supplier_id between", value1, value2, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdNotBetween(Integer value1, Integer value2) {
            addCriterion("supplier_id not between", value1, value2, "supplierId");
            return (Criteria) this;
        }

        public Criteria andRegionIdIsNull() {
            addCriterion("region_id is null");
            return (Criteria) this;
        }

        public Criteria andRegionIdIsNotNull() {
            addCriterion("region_id is not null");
            return (Criteria) this;
        }

        public Criteria andRegionIdEqualTo(Integer value) {
            addCriterion("region_id =", value, "regionId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andRegionIdEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("region_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegionIdNotEqualTo(Integer value) {
            addCriterion("region_id <>", value, "regionId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andRegionIdNotEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("region_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegionIdGreaterThan(Integer value) {
            addCriterion("region_id >", value, "regionId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andRegionIdGreaterThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("region_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegionIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("region_id >=", value, "regionId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andRegionIdGreaterThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("region_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegionIdLessThan(Integer value) {
            addCriterion("region_id <", value, "regionId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andRegionIdLessThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("region_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegionIdLessThanOrEqualTo(Integer value) {
            addCriterion("region_id <=", value, "regionId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andRegionIdLessThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("region_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegionIdIn(List<Integer> values) {
            addCriterion("region_id in", values, "regionId");
            return (Criteria) this;
        }

        public Criteria andRegionIdNotIn(List<Integer> values) {
            addCriterion("region_id not in", values, "regionId");
            return (Criteria) this;
        }

        public Criteria andRegionIdBetween(Integer value1, Integer value2) {
            addCriterion("region_id between", value1, value2, "regionId");
            return (Criteria) this;
        }

        public Criteria andRegionIdNotBetween(Integer value1, Integer value2) {
            addCriterion("region_id not between", value1, value2, "regionId");
            return (Criteria) this;
        }

        public Criteria andSupplierNameIsNull() {
            addCriterion("supplier_name is null");
            return (Criteria) this;
        }

        public Criteria andSupplierNameIsNotNull() {
            addCriterion("supplier_name is not null");
            return (Criteria) this;
        }

        public Criteria andSupplierNameEqualTo(String value) {
            addCriterion("supplier_name =", value, "supplierName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierNameEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierNameNotEqualTo(String value) {
            addCriterion("supplier_name <>", value, "supplierName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierNameNotEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierNameGreaterThan(String value) {
            addCriterion("supplier_name >", value, "supplierName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierNameGreaterThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierNameGreaterThanOrEqualTo(String value) {
            addCriterion("supplier_name >=", value, "supplierName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierNameGreaterThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierNameLessThan(String value) {
            addCriterion("supplier_name <", value, "supplierName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierNameLessThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierNameLessThanOrEqualTo(String value) {
            addCriterion("supplier_name <=", value, "supplierName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierNameLessThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierNameLike(String value) {
            addCriterion("supplier_name like", value, "supplierName");
            return (Criteria) this;
        }

        public Criteria andSupplierNameNotLike(String value) {
            addCriterion("supplier_name not like", value, "supplierName");
            return (Criteria) this;
        }

        public Criteria andSupplierNameIn(List<String> values) {
            addCriterion("supplier_name in", values, "supplierName");
            return (Criteria) this;
        }

        public Criteria andSupplierNameNotIn(List<String> values) {
            addCriterion("supplier_name not in", values, "supplierName");
            return (Criteria) this;
        }

        public Criteria andSupplierNameBetween(String value1, String value2) {
            addCriterion("supplier_name between", value1, value2, "supplierName");
            return (Criteria) this;
        }

        public Criteria andSupplierNameNotBetween(String value1, String value2) {
            addCriterion("supplier_name not between", value1, value2, "supplierName");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdIsNull() {
            addCriterion("user_info_id is null");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdIsNotNull() {
            addCriterion("user_info_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdEqualTo(Integer value) {
            addCriterion("user_info_id =", value, "userInfoId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andUserInfoIdEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("user_info_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoIdNotEqualTo(Integer value) {
            addCriterion("user_info_id <>", value, "userInfoId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andUserInfoIdNotEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("user_info_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoIdGreaterThan(Integer value) {
            addCriterion("user_info_id >", value, "userInfoId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andUserInfoIdGreaterThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("user_info_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_info_id >=", value, "userInfoId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andUserInfoIdGreaterThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("user_info_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoIdLessThan(Integer value) {
            addCriterion("user_info_id <", value, "userInfoId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andUserInfoIdLessThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("user_info_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_info_id <=", value, "userInfoId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andUserInfoIdLessThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("user_info_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoIdIn(List<Integer> values) {
            addCriterion("user_info_id in", values, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdNotIn(List<Integer> values) {
            addCriterion("user_info_id not in", values, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdBetween(Integer value1, Integer value2) {
            addCriterion("user_info_id between", value1, value2, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_info_id not between", value1, value2, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andContactsIsNull() {
            addCriterion("contacts is null");
            return (Criteria) this;
        }

        public Criteria andContactsIsNotNull() {
            addCriterion("contacts is not null");
            return (Criteria) this;
        }

        public Criteria andContactsEqualTo(String value) {
            addCriterion("contacts =", value, "contacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andContactsEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("contacts = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactsNotEqualTo(String value) {
            addCriterion("contacts <>", value, "contacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andContactsNotEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("contacts <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactsGreaterThan(String value) {
            addCriterion("contacts >", value, "contacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andContactsGreaterThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("contacts > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactsGreaterThanOrEqualTo(String value) {
            addCriterion("contacts >=", value, "contacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andContactsGreaterThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("contacts >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactsLessThan(String value) {
            addCriterion("contacts <", value, "contacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andContactsLessThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("contacts < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactsLessThanOrEqualTo(String value) {
            addCriterion("contacts <=", value, "contacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andContactsLessThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("contacts <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactsLike(String value) {
            addCriterion("contacts like", value, "contacts");
            return (Criteria) this;
        }

        public Criteria andContactsNotLike(String value) {
            addCriterion("contacts not like", value, "contacts");
            return (Criteria) this;
        }

        public Criteria andContactsIn(List<String> values) {
            addCriterion("contacts in", values, "contacts");
            return (Criteria) this;
        }

        public Criteria andContactsNotIn(List<String> values) {
            addCriterion("contacts not in", values, "contacts");
            return (Criteria) this;
        }

        public Criteria andContactsBetween(String value1, String value2) {
            addCriterion("contacts between", value1, value2, "contacts");
            return (Criteria) this;
        }

        public Criteria andContactsNotBetween(String value1, String value2) {
            addCriterion("contacts not between", value1, value2, "contacts");
            return (Criteria) this;
        }

        public Criteria andTelIsNull() {
            addCriterion("tel is null");
            return (Criteria) this;
        }

        public Criteria andTelIsNotNull() {
            addCriterion("tel is not null");
            return (Criteria) this;
        }

        public Criteria andTelEqualTo(String value) {
            addCriterion("tel =", value, "tel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andTelEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("tel = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTelNotEqualTo(String value) {
            addCriterion("tel <>", value, "tel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andTelNotEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("tel <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTelGreaterThan(String value) {
            addCriterion("tel >", value, "tel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andTelGreaterThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("tel > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTelGreaterThanOrEqualTo(String value) {
            addCriterion("tel >=", value, "tel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andTelGreaterThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("tel >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTelLessThan(String value) {
            addCriterion("tel <", value, "tel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andTelLessThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("tel < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTelLessThanOrEqualTo(String value) {
            addCriterion("tel <=", value, "tel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andTelLessThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("tel <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTelLike(String value) {
            addCriterion("tel like", value, "tel");
            return (Criteria) this;
        }

        public Criteria andTelNotLike(String value) {
            addCriterion("tel not like", value, "tel");
            return (Criteria) this;
        }

        public Criteria andTelIn(List<String> values) {
            addCriterion("tel in", values, "tel");
            return (Criteria) this;
        }

        public Criteria andTelNotIn(List<String> values) {
            addCriterion("tel not in", values, "tel");
            return (Criteria) this;
        }

        public Criteria andTelBetween(String value1, String value2) {
            addCriterion("tel between", value1, value2, "tel");
            return (Criteria) this;
        }

        public Criteria andTelNotBetween(String value1, String value2) {
            addCriterion("tel not between", value1, value2, "tel");
            return (Criteria) this;
        }

        public Criteria andSupplierDescIsNull() {
            addCriterion("supplier_desc is null");
            return (Criteria) this;
        }

        public Criteria andSupplierDescIsNotNull() {
            addCriterion("supplier_desc is not null");
            return (Criteria) this;
        }

        public Criteria andSupplierDescEqualTo(String value) {
            addCriterion("supplier_desc =", value, "supplierDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierDescEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_desc = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierDescNotEqualTo(String value) {
            addCriterion("supplier_desc <>", value, "supplierDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierDescNotEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_desc <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierDescGreaterThan(String value) {
            addCriterion("supplier_desc >", value, "supplierDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierDescGreaterThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_desc > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierDescGreaterThanOrEqualTo(String value) {
            addCriterion("supplier_desc >=", value, "supplierDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierDescGreaterThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_desc >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierDescLessThan(String value) {
            addCriterion("supplier_desc <", value, "supplierDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierDescLessThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_desc < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierDescLessThanOrEqualTo(String value) {
            addCriterion("supplier_desc <=", value, "supplierDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierDescLessThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_desc <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierDescLike(String value) {
            addCriterion("supplier_desc like", value, "supplierDesc");
            return (Criteria) this;
        }

        public Criteria andSupplierDescNotLike(String value) {
            addCriterion("supplier_desc not like", value, "supplierDesc");
            return (Criteria) this;
        }

        public Criteria andSupplierDescIn(List<String> values) {
            addCriterion("supplier_desc in", values, "supplierDesc");
            return (Criteria) this;
        }

        public Criteria andSupplierDescNotIn(List<String> values) {
            addCriterion("supplier_desc not in", values, "supplierDesc");
            return (Criteria) this;
        }

        public Criteria andSupplierDescBetween(String value1, String value2) {
            addCriterion("supplier_desc between", value1, value2, "supplierDesc");
            return (Criteria) this;
        }

        public Criteria andSupplierDescNotBetween(String value1, String value2) {
            addCriterion("supplier_desc not between", value1, value2, "supplierDesc");
            return (Criteria) this;
        }

        public Criteria andSalemanIsNull() {
            addCriterion("saleman is null");
            return (Criteria) this;
        }

        public Criteria andSalemanIsNotNull() {
            addCriterion("saleman is not null");
            return (Criteria) this;
        }

        public Criteria andSalemanEqualTo(String value) {
            addCriterion("saleman =", value, "saleman");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSalemanEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("saleman = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalemanNotEqualTo(String value) {
            addCriterion("saleman <>", value, "saleman");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSalemanNotEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("saleman <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalemanGreaterThan(String value) {
            addCriterion("saleman >", value, "saleman");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSalemanGreaterThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("saleman > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalemanGreaterThanOrEqualTo(String value) {
            addCriterion("saleman >=", value, "saleman");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSalemanGreaterThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("saleman >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalemanLessThan(String value) {
            addCriterion("saleman <", value, "saleman");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSalemanLessThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("saleman < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalemanLessThanOrEqualTo(String value) {
            addCriterion("saleman <=", value, "saleman");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSalemanLessThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("saleman <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalemanLike(String value) {
            addCriterion("saleman like", value, "saleman");
            return (Criteria) this;
        }

        public Criteria andSalemanNotLike(String value) {
            addCriterion("saleman not like", value, "saleman");
            return (Criteria) this;
        }

        public Criteria andSalemanIn(List<String> values) {
            addCriterion("saleman in", values, "saleman");
            return (Criteria) this;
        }

        public Criteria andSalemanNotIn(List<String> values) {
            addCriterion("saleman not in", values, "saleman");
            return (Criteria) this;
        }

        public Criteria andSalemanBetween(String value1, String value2) {
            addCriterion("saleman between", value1, value2, "saleman");
            return (Criteria) this;
        }

        public Criteria andSalemanNotBetween(String value1, String value2) {
            addCriterion("saleman not between", value1, value2, "saleman");
            return (Criteria) this;
        }

        public Criteria andSupplierAddManIsNull() {
            addCriterion("supplier_add_man is null");
            return (Criteria) this;
        }

        public Criteria andSupplierAddManIsNotNull() {
            addCriterion("supplier_add_man is not null");
            return (Criteria) this;
        }

        public Criteria andSupplierAddManEqualTo(String value) {
            addCriterion("supplier_add_man =", value, "supplierAddMan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierAddManEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_add_man = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierAddManNotEqualTo(String value) {
            addCriterion("supplier_add_man <>", value, "supplierAddMan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierAddManNotEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_add_man <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierAddManGreaterThan(String value) {
            addCriterion("supplier_add_man >", value, "supplierAddMan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierAddManGreaterThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_add_man > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierAddManGreaterThanOrEqualTo(String value) {
            addCriterion("supplier_add_man >=", value, "supplierAddMan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierAddManGreaterThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_add_man >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierAddManLessThan(String value) {
            addCriterion("supplier_add_man <", value, "supplierAddMan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierAddManLessThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_add_man < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierAddManLessThanOrEqualTo(String value) {
            addCriterion("supplier_add_man <=", value, "supplierAddMan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierAddManLessThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_add_man <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierAddManLike(String value) {
            addCriterion("supplier_add_man like", value, "supplierAddMan");
            return (Criteria) this;
        }

        public Criteria andSupplierAddManNotLike(String value) {
            addCriterion("supplier_add_man not like", value, "supplierAddMan");
            return (Criteria) this;
        }

        public Criteria andSupplierAddManIn(List<String> values) {
            addCriterion("supplier_add_man in", values, "supplierAddMan");
            return (Criteria) this;
        }

        public Criteria andSupplierAddManNotIn(List<String> values) {
            addCriterion("supplier_add_man not in", values, "supplierAddMan");
            return (Criteria) this;
        }

        public Criteria andSupplierAddManBetween(String value1, String value2) {
            addCriterion("supplier_add_man between", value1, value2, "supplierAddMan");
            return (Criteria) this;
        }

        public Criteria andSupplierAddManNotBetween(String value1, String value2) {
            addCriterion("supplier_add_man not between", value1, value2, "supplierAddMan");
            return (Criteria) this;
        }

        public Criteria andSupplierAddTimeIsNull() {
            addCriterion("supplier_add_time is null");
            return (Criteria) this;
        }

        public Criteria andSupplierAddTimeIsNotNull() {
            addCriterion("supplier_add_time is not null");
            return (Criteria) this;
        }

        public Criteria andSupplierAddTimeEqualTo(LocalDateTime value) {
            addCriterion("supplier_add_time =", value, "supplierAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierAddTimeEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("supplier_add_time <>", value, "supplierAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierAddTimeNotEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("supplier_add_time >", value, "supplierAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierAddTimeGreaterThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("supplier_add_time >=", value, "supplierAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierAddTimeGreaterThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierAddTimeLessThan(LocalDateTime value) {
            addCriterion("supplier_add_time <", value, "supplierAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierAddTimeLessThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("supplier_add_time <=", value, "supplierAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierAddTimeLessThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierAddTimeIn(List<LocalDateTime> values) {
            addCriterion("supplier_add_time in", values, "supplierAddTime");
            return (Criteria) this;
        }

        public Criteria andSupplierAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("supplier_add_time not in", values, "supplierAddTime");
            return (Criteria) this;
        }

        public Criteria andSupplierAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("supplier_add_time between", value1, value2, "supplierAddTime");
            return (Criteria) this;
        }

        public Criteria andSupplierAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("supplier_add_time not between", value1, value2, "supplierAddTime");
            return (Criteria) this;
        }

        public Criteria andSupplierLastModifierIsNull() {
            addCriterion("supplier_last_modifier is null");
            return (Criteria) this;
        }

        public Criteria andSupplierLastModifierIsNotNull() {
            addCriterion("supplier_last_modifier is not null");
            return (Criteria) this;
        }

        public Criteria andSupplierLastModifierEqualTo(String value) {
            addCriterion("supplier_last_modifier =", value, "supplierLastModifier");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierLastModifierEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_last_modifier = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierLastModifierNotEqualTo(String value) {
            addCriterion("supplier_last_modifier <>", value, "supplierLastModifier");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierLastModifierNotEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_last_modifier <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierLastModifierGreaterThan(String value) {
            addCriterion("supplier_last_modifier >", value, "supplierLastModifier");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierLastModifierGreaterThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_last_modifier > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierLastModifierGreaterThanOrEqualTo(String value) {
            addCriterion("supplier_last_modifier >=", value, "supplierLastModifier");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierLastModifierGreaterThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_last_modifier >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierLastModifierLessThan(String value) {
            addCriterion("supplier_last_modifier <", value, "supplierLastModifier");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierLastModifierLessThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_last_modifier < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierLastModifierLessThanOrEqualTo(String value) {
            addCriterion("supplier_last_modifier <=", value, "supplierLastModifier");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierLastModifierLessThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_last_modifier <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierLastModifierLike(String value) {
            addCriterion("supplier_last_modifier like", value, "supplierLastModifier");
            return (Criteria) this;
        }

        public Criteria andSupplierLastModifierNotLike(String value) {
            addCriterion("supplier_last_modifier not like", value, "supplierLastModifier");
            return (Criteria) this;
        }

        public Criteria andSupplierLastModifierIn(List<String> values) {
            addCriterion("supplier_last_modifier in", values, "supplierLastModifier");
            return (Criteria) this;
        }

        public Criteria andSupplierLastModifierNotIn(List<String> values) {
            addCriterion("supplier_last_modifier not in", values, "supplierLastModifier");
            return (Criteria) this;
        }

        public Criteria andSupplierLastModifierBetween(String value1, String value2) {
            addCriterion("supplier_last_modifier between", value1, value2, "supplierLastModifier");
            return (Criteria) this;
        }

        public Criteria andSupplierLastModifierNotBetween(String value1, String value2) {
            addCriterion("supplier_last_modifier not between", value1, value2, "supplierLastModifier");
            return (Criteria) this;
        }

        public Criteria andSupplierLastEditTimeIsNull() {
            addCriterion("supplier_last_edit_time is null");
            return (Criteria) this;
        }

        public Criteria andSupplierLastEditTimeIsNotNull() {
            addCriterion("supplier_last_edit_time is not null");
            return (Criteria) this;
        }

        public Criteria andSupplierLastEditTimeEqualTo(LocalDateTime value) {
            addCriterion("supplier_last_edit_time =", value, "supplierLastEditTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierLastEditTimeEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_last_edit_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierLastEditTimeNotEqualTo(LocalDateTime value) {
            addCriterion("supplier_last_edit_time <>", value, "supplierLastEditTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierLastEditTimeNotEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_last_edit_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierLastEditTimeGreaterThan(LocalDateTime value) {
            addCriterion("supplier_last_edit_time >", value, "supplierLastEditTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierLastEditTimeGreaterThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_last_edit_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierLastEditTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("supplier_last_edit_time >=", value, "supplierLastEditTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierLastEditTimeGreaterThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_last_edit_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierLastEditTimeLessThan(LocalDateTime value) {
            addCriterion("supplier_last_edit_time <", value, "supplierLastEditTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierLastEditTimeLessThanColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_last_edit_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierLastEditTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("supplier_last_edit_time <=", value, "supplierLastEditTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria andSupplierLastEditTimeLessThanOrEqualToColumn(AllSupplier.Column column) {
            addCriterion(new StringBuilder("supplier_last_edit_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierLastEditTimeIn(List<LocalDateTime> values) {
            addCriterion("supplier_last_edit_time in", values, "supplierLastEditTime");
            return (Criteria) this;
        }

        public Criteria andSupplierLastEditTimeNotIn(List<LocalDateTime> values) {
            addCriterion("supplier_last_edit_time not in", values, "supplierLastEditTime");
            return (Criteria) this;
        }

        public Criteria andSupplierLastEditTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("supplier_last_edit_time between", value1, value2, "supplierLastEditTime");
            return (Criteria) this;
        }

        public Criteria andSupplierLastEditTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("supplier_last_edit_time not between", value1, value2, "supplierLastEditTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_supplier
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        private AllSupplierExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        protected Criteria(AllSupplierExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public AllSupplierExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table all_supplier
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_supplier
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_supplier
         *
         * @mbg.generated
         */
        void example(com.cqjtu.sc.admin.goods.db.domain.AllSupplierExample example);
    }
}