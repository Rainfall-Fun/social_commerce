package com.cqjtu.sc.admin.goods.db.domain;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class AllGoodsInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    public AllGoodsInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    public AllGoodsInfoExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    public AllGoodsInfoExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        AllGoodsInfoExample example = new AllGoodsInfoExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    public AllGoodsInfoExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    public AllGoodsInfoExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andGoodsIdIsNull() {
            addCriterion("goods_id is null");
            return (Criteria) this;
        }

        public Criteria andGoodsIdIsNotNull() {
            addCriterion("goods_id is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsIdEqualTo(Integer value) {
            addCriterion("goods_id =", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdNotEqualTo(Integer value) {
            addCriterion("goods_id <>", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdGreaterThan(Integer value) {
            addCriterion("goods_id >", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("goods_id >=", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdLessThan(Integer value) {
            addCriterion("goods_id <", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdLessThanOrEqualTo(Integer value) {
            addCriterion("goods_id <=", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdIn(List<Integer> values) {
            addCriterion("goods_id in", values, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdNotIn(List<Integer> values) {
            addCriterion("goods_id not in", values, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdBetween(Integer value1, Integer value2) {
            addCriterion("goods_id between", value1, value2, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdNotBetween(Integer value1, Integer value2) {
            addCriterion("goods_id not between", value1, value2, "goodsId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdIsNull() {
            addCriterion("payment_id is null");
            return (Criteria) this;
        }

        public Criteria andPaymentIdIsNotNull() {
            addCriterion("payment_id is not null");
            return (Criteria) this;
        }

        public Criteria andPaymentIdEqualTo(Integer value) {
            addCriterion("payment_id =", value, "paymentId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andPaymentIdEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("payment_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaymentIdNotEqualTo(Integer value) {
            addCriterion("payment_id <>", value, "paymentId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andPaymentIdNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("payment_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaymentIdGreaterThan(Integer value) {
            addCriterion("payment_id >", value, "paymentId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andPaymentIdGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("payment_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaymentIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("payment_id >=", value, "paymentId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andPaymentIdGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("payment_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaymentIdLessThan(Integer value) {
            addCriterion("payment_id <", value, "paymentId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andPaymentIdLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("payment_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaymentIdLessThanOrEqualTo(Integer value) {
            addCriterion("payment_id <=", value, "paymentId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andPaymentIdLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("payment_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaymentIdIn(List<Integer> values) {
            addCriterion("payment_id in", values, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdNotIn(List<Integer> values) {
            addCriterion("payment_id not in", values, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdBetween(Integer value1, Integer value2) {
            addCriterion("payment_id between", value1, value2, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdNotBetween(Integer value1, Integer value2) {
            addCriterion("payment_id not between", value1, value2, "paymentId");
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdIsNull() {
            addCriterion("carriage_rule_id is null");
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdIsNotNull() {
            addCriterion("carriage_rule_id is not null");
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdEqualTo(Integer value) {
            addCriterion("carriage_rule_id =", value, "carriageRuleId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andCarriageRuleIdEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("carriage_rule_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdNotEqualTo(Integer value) {
            addCriterion("carriage_rule_id <>", value, "carriageRuleId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andCarriageRuleIdNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("carriage_rule_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdGreaterThan(Integer value) {
            addCriterion("carriage_rule_id >", value, "carriageRuleId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andCarriageRuleIdGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("carriage_rule_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("carriage_rule_id >=", value, "carriageRuleId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andCarriageRuleIdGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("carriage_rule_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdLessThan(Integer value) {
            addCriterion("carriage_rule_id <", value, "carriageRuleId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andCarriageRuleIdLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("carriage_rule_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdLessThanOrEqualTo(Integer value) {
            addCriterion("carriage_rule_id <=", value, "carriageRuleId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andCarriageRuleIdLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("carriage_rule_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdIn(List<Integer> values) {
            addCriterion("carriage_rule_id in", values, "carriageRuleId");
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdNotIn(List<Integer> values) {
            addCriterion("carriage_rule_id not in", values, "carriageRuleId");
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdBetween(Integer value1, Integer value2) {
            addCriterion("carriage_rule_id between", value1, value2, "carriageRuleId");
            return (Criteria) this;
        }

        public Criteria andCarriageRuleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("carriage_rule_id not between", value1, value2, "carriageRuleId");
            return (Criteria) this;
        }

        public Criteria andCategoryIdIsNull() {
            addCriterion("category_id is null");
            return (Criteria) this;
        }

        public Criteria andCategoryIdIsNotNull() {
            addCriterion("category_id is not null");
            return (Criteria) this;
        }

        public Criteria andCategoryIdEqualTo(Integer value) {
            addCriterion("category_id =", value, "categoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andCategoryIdEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("category_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIdNotEqualTo(Integer value) {
            addCriterion("category_id <>", value, "categoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andCategoryIdNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("category_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIdGreaterThan(Integer value) {
            addCriterion("category_id >", value, "categoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andCategoryIdGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("category_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("category_id >=", value, "categoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andCategoryIdGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("category_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIdLessThan(Integer value) {
            addCriterion("category_id <", value, "categoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andCategoryIdLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("category_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIdLessThanOrEqualTo(Integer value) {
            addCriterion("category_id <=", value, "categoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andCategoryIdLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("category_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIdIn(List<Integer> values) {
            addCriterion("category_id in", values, "categoryId");
            return (Criteria) this;
        }

        public Criteria andCategoryIdNotIn(List<Integer> values) {
            addCriterion("category_id not in", values, "categoryId");
            return (Criteria) this;
        }

        public Criteria andCategoryIdBetween(Integer value1, Integer value2) {
            addCriterion("category_id between", value1, value2, "categoryId");
            return (Criteria) this;
        }

        public Criteria andCategoryIdNotBetween(Integer value1, Integer value2) {
            addCriterion("category_id not between", value1, value2, "categoryId");
            return (Criteria) this;
        }

        public Criteria andBrandIdIsNull() {
            addCriterion("brand_id is null");
            return (Criteria) this;
        }

        public Criteria andBrandIdIsNotNull() {
            addCriterion("brand_id is not null");
            return (Criteria) this;
        }

        public Criteria andBrandIdEqualTo(Integer value) {
            addCriterion("brand_id =", value, "brandId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andBrandIdEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("brand_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandIdNotEqualTo(Integer value) {
            addCriterion("brand_id <>", value, "brandId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andBrandIdNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("brand_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandIdGreaterThan(Integer value) {
            addCriterion("brand_id >", value, "brandId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andBrandIdGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("brand_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("brand_id >=", value, "brandId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andBrandIdGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("brand_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandIdLessThan(Integer value) {
            addCriterion("brand_id <", value, "brandId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andBrandIdLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("brand_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandIdLessThanOrEqualTo(Integer value) {
            addCriterion("brand_id <=", value, "brandId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andBrandIdLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("brand_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandIdIn(List<Integer> values) {
            addCriterion("brand_id in", values, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdNotIn(List<Integer> values) {
            addCriterion("brand_id not in", values, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdBetween(Integer value1, Integer value2) {
            addCriterion("brand_id between", value1, value2, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdNotBetween(Integer value1, Integer value2) {
            addCriterion("brand_id not between", value1, value2, "brandId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdIsNull() {
            addCriterion("supplier_id is null");
            return (Criteria) this;
        }

        public Criteria andSupplierIdIsNotNull() {
            addCriterion("supplier_id is not null");
            return (Criteria) this;
        }

        public Criteria andSupplierIdEqualTo(Integer value) {
            addCriterion("supplier_id =", value, "supplierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andSupplierIdEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("supplier_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierIdNotEqualTo(Integer value) {
            addCriterion("supplier_id <>", value, "supplierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andSupplierIdNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("supplier_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierIdGreaterThan(Integer value) {
            addCriterion("supplier_id >", value, "supplierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andSupplierIdGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("supplier_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("supplier_id >=", value, "supplierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andSupplierIdGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("supplier_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierIdLessThan(Integer value) {
            addCriterion("supplier_id <", value, "supplierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andSupplierIdLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("supplier_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierIdLessThanOrEqualTo(Integer value) {
            addCriterion("supplier_id <=", value, "supplierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andSupplierIdLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("supplier_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSupplierIdIn(List<Integer> values) {
            addCriterion("supplier_id in", values, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdNotIn(List<Integer> values) {
            addCriterion("supplier_id not in", values, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdBetween(Integer value1, Integer value2) {
            addCriterion("supplier_id between", value1, value2, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdNotBetween(Integer value1, Integer value2) {
            addCriterion("supplier_id not between", value1, value2, "supplierId");
            return (Criteria) this;
        }

        public Criteria andAllCategoryIdIsNull() {
            addCriterion("all_category_id is null");
            return (Criteria) this;
        }

        public Criteria andAllCategoryIdIsNotNull() {
            addCriterion("all_category_id is not null");
            return (Criteria) this;
        }

        public Criteria andAllCategoryIdEqualTo(Integer value) {
            addCriterion("all_category_id =", value, "allCategoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andAllCategoryIdEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("all_category_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllCategoryIdNotEqualTo(Integer value) {
            addCriterion("all_category_id <>", value, "allCategoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andAllCategoryIdNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("all_category_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllCategoryIdGreaterThan(Integer value) {
            addCriterion("all_category_id >", value, "allCategoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andAllCategoryIdGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("all_category_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllCategoryIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("all_category_id >=", value, "allCategoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andAllCategoryIdGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("all_category_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllCategoryIdLessThan(Integer value) {
            addCriterion("all_category_id <", value, "allCategoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andAllCategoryIdLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("all_category_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllCategoryIdLessThanOrEqualTo(Integer value) {
            addCriterion("all_category_id <=", value, "allCategoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andAllCategoryIdLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("all_category_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllCategoryIdIn(List<Integer> values) {
            addCriterion("all_category_id in", values, "allCategoryId");
            return (Criteria) this;
        }

        public Criteria andAllCategoryIdNotIn(List<Integer> values) {
            addCriterion("all_category_id not in", values, "allCategoryId");
            return (Criteria) this;
        }

        public Criteria andAllCategoryIdBetween(Integer value1, Integer value2) {
            addCriterion("all_category_id between", value1, value2, "allCategoryId");
            return (Criteria) this;
        }

        public Criteria andAllCategoryIdNotBetween(Integer value1, Integer value2) {
            addCriterion("all_category_id not between", value1, value2, "allCategoryId");
            return (Criteria) this;
        }

        public Criteria andGoodsNameIsNull() {
            addCriterion("goods_name is null");
            return (Criteria) this;
        }

        public Criteria andGoodsNameIsNotNull() {
            addCriterion("goods_name is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsNameEqualTo(String value) {
            addCriterion("goods_name =", value, "goodsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsNameEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotEqualTo(String value) {
            addCriterion("goods_name <>", value, "goodsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsNameNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNameGreaterThan(String value) {
            addCriterion("goods_name >", value, "goodsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsNameGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNameGreaterThanOrEqualTo(String value) {
            addCriterion("goods_name >=", value, "goodsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsNameGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNameLessThan(String value) {
            addCriterion("goods_name <", value, "goodsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsNameLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNameLessThanOrEqualTo(String value) {
            addCriterion("goods_name <=", value, "goodsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsNameLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNameLike(String value) {
            addCriterion("goods_name like", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotLike(String value) {
            addCriterion("goods_name not like", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameIn(List<String> values) {
            addCriterion("goods_name in", values, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotIn(List<String> values) {
            addCriterion("goods_name not in", values, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameBetween(String value1, String value2) {
            addCriterion("goods_name between", value1, value2, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotBetween(String value1, String value2) {
            addCriterion("goods_name not between", value1, value2, "goodsName");
            return (Criteria) this;
        }

        public Criteria andBarcodeIsNull() {
            addCriterion("barcode is null");
            return (Criteria) this;
        }

        public Criteria andBarcodeIsNotNull() {
            addCriterion("barcode is not null");
            return (Criteria) this;
        }

        public Criteria andBarcodeEqualTo(String value) {
            addCriterion("barcode =", value, "barcode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andBarcodeEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("barcode = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBarcodeNotEqualTo(String value) {
            addCriterion("barcode <>", value, "barcode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andBarcodeNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("barcode <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBarcodeGreaterThan(String value) {
            addCriterion("barcode >", value, "barcode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andBarcodeGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("barcode > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBarcodeGreaterThanOrEqualTo(String value) {
            addCriterion("barcode >=", value, "barcode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andBarcodeGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("barcode >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBarcodeLessThan(String value) {
            addCriterion("barcode <", value, "barcode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andBarcodeLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("barcode < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBarcodeLessThanOrEqualTo(String value) {
            addCriterion("barcode <=", value, "barcode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andBarcodeLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("barcode <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBarcodeLike(String value) {
            addCriterion("barcode like", value, "barcode");
            return (Criteria) this;
        }

        public Criteria andBarcodeNotLike(String value) {
            addCriterion("barcode not like", value, "barcode");
            return (Criteria) this;
        }

        public Criteria andBarcodeIn(List<String> values) {
            addCriterion("barcode in", values, "barcode");
            return (Criteria) this;
        }

        public Criteria andBarcodeNotIn(List<String> values) {
            addCriterion("barcode not in", values, "barcode");
            return (Criteria) this;
        }

        public Criteria andBarcodeBetween(String value1, String value2) {
            addCriterion("barcode between", value1, value2, "barcode");
            return (Criteria) this;
        }

        public Criteria andBarcodeNotBetween(String value1, String value2) {
            addCriterion("barcode not between", value1, value2, "barcode");
            return (Criteria) this;
        }

        public Criteria andUnitIsNull() {
            addCriterion("unit is null");
            return (Criteria) this;
        }

        public Criteria andUnitIsNotNull() {
            addCriterion("unit is not null");
            return (Criteria) this;
        }

        public Criteria andUnitEqualTo(String value) {
            addCriterion("unit =", value, "unit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andUnitEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("unit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnitNotEqualTo(String value) {
            addCriterion("unit <>", value, "unit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andUnitNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("unit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnitGreaterThan(String value) {
            addCriterion("unit >", value, "unit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andUnitGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("unit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnitGreaterThanOrEqualTo(String value) {
            addCriterion("unit >=", value, "unit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andUnitGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("unit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnitLessThan(String value) {
            addCriterion("unit <", value, "unit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andUnitLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("unit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnitLessThanOrEqualTo(String value) {
            addCriterion("unit <=", value, "unit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andUnitLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("unit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnitLike(String value) {
            addCriterion("unit like", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitNotLike(String value) {
            addCriterion("unit not like", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitIn(List<String> values) {
            addCriterion("unit in", values, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitNotIn(List<String> values) {
            addCriterion("unit not in", values, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitBetween(String value1, String value2) {
            addCriterion("unit between", value1, value2, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitNotBetween(String value1, String value2) {
            addCriterion("unit not between", value1, value2, "unit");
            return (Criteria) this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("price is null");
            return (Criteria) this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("price is not null");
            return (Criteria) this;
        }

        public Criteria andPriceEqualTo(BigDecimal value) {
            addCriterion("price =", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andPriceEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceNotEqualTo(BigDecimal value) {
            addCriterion("price <>", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andPriceNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThan(BigDecimal value) {
            addCriterion("price >", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andPriceGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("price >=", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andPriceGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceLessThan(BigDecimal value) {
            addCriterion("price <", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andPriceLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("price <=", value, "price");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andPriceLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPriceIn(List<BigDecimal> values) {
            addCriterion("price in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotIn(List<BigDecimal> values) {
            addCriterion("price not in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("price between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("price not between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andTaxesIsNull() {
            addCriterion("taxes is null");
            return (Criteria) this;
        }

        public Criteria andTaxesIsNotNull() {
            addCriterion("taxes is not null");
            return (Criteria) this;
        }

        public Criteria andTaxesEqualTo(BigDecimal value) {
            addCriterion("taxes =", value, "taxes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andTaxesEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("taxes = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxesNotEqualTo(BigDecimal value) {
            addCriterion("taxes <>", value, "taxes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andTaxesNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("taxes <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxesGreaterThan(BigDecimal value) {
            addCriterion("taxes >", value, "taxes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andTaxesGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("taxes > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("taxes >=", value, "taxes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andTaxesGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("taxes >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxesLessThan(BigDecimal value) {
            addCriterion("taxes <", value, "taxes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andTaxesLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("taxes < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("taxes <=", value, "taxes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andTaxesLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("taxes <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxesIn(List<BigDecimal> values) {
            addCriterion("taxes in", values, "taxes");
            return (Criteria) this;
        }

        public Criteria andTaxesNotIn(List<BigDecimal> values) {
            addCriterion("taxes not in", values, "taxes");
            return (Criteria) this;
        }

        public Criteria andTaxesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("taxes between", value1, value2, "taxes");
            return (Criteria) this;
        }

        public Criteria andTaxesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("taxes not between", value1, value2, "taxes");
            return (Criteria) this;
        }

        public Criteria andGoodsDescIsNull() {
            addCriterion("goods_desc is null");
            return (Criteria) this;
        }

        public Criteria andGoodsDescIsNotNull() {
            addCriterion("goods_desc is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsDescEqualTo(String value) {
            addCriterion("goods_desc =", value, "goodsDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsDescEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_desc = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsDescNotEqualTo(String value) {
            addCriterion("goods_desc <>", value, "goodsDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsDescNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_desc <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsDescGreaterThan(String value) {
            addCriterion("goods_desc >", value, "goodsDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsDescGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_desc > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsDescGreaterThanOrEqualTo(String value) {
            addCriterion("goods_desc >=", value, "goodsDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsDescGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_desc >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsDescLessThan(String value) {
            addCriterion("goods_desc <", value, "goodsDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsDescLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_desc < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsDescLessThanOrEqualTo(String value) {
            addCriterion("goods_desc <=", value, "goodsDesc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsDescLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_desc <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsDescLike(String value) {
            addCriterion("goods_desc like", value, "goodsDesc");
            return (Criteria) this;
        }

        public Criteria andGoodsDescNotLike(String value) {
            addCriterion("goods_desc not like", value, "goodsDesc");
            return (Criteria) this;
        }

        public Criteria andGoodsDescIn(List<String> values) {
            addCriterion("goods_desc in", values, "goodsDesc");
            return (Criteria) this;
        }

        public Criteria andGoodsDescNotIn(List<String> values) {
            addCriterion("goods_desc not in", values, "goodsDesc");
            return (Criteria) this;
        }

        public Criteria andGoodsDescBetween(String value1, String value2) {
            addCriterion("goods_desc between", value1, value2, "goodsDesc");
            return (Criteria) this;
        }

        public Criteria andGoodsDescNotBetween(String value1, String value2) {
            addCriterion("goods_desc not between", value1, value2, "goodsDesc");
            return (Criteria) this;
        }

        public Criteria andIsOnSaleIsNull() {
            addCriterion("is_on_sale is null");
            return (Criteria) this;
        }

        public Criteria andIsOnSaleIsNotNull() {
            addCriterion("is_on_sale is not null");
            return (Criteria) this;
        }

        public Criteria andIsOnSaleEqualTo(Integer value) {
            addCriterion("is_on_sale =", value, "isOnSale");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andIsOnSaleEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("is_on_sale = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsOnSaleNotEqualTo(Integer value) {
            addCriterion("is_on_sale <>", value, "isOnSale");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andIsOnSaleNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("is_on_sale <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsOnSaleGreaterThan(Integer value) {
            addCriterion("is_on_sale >", value, "isOnSale");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andIsOnSaleGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("is_on_sale > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsOnSaleGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_on_sale >=", value, "isOnSale");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andIsOnSaleGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("is_on_sale >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsOnSaleLessThan(Integer value) {
            addCriterion("is_on_sale <", value, "isOnSale");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andIsOnSaleLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("is_on_sale < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsOnSaleLessThanOrEqualTo(Integer value) {
            addCriterion("is_on_sale <=", value, "isOnSale");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andIsOnSaleLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("is_on_sale <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsOnSaleIn(List<Integer> values) {
            addCriterion("is_on_sale in", values, "isOnSale");
            return (Criteria) this;
        }

        public Criteria andIsOnSaleNotIn(List<Integer> values) {
            addCriterion("is_on_sale not in", values, "isOnSale");
            return (Criteria) this;
        }

        public Criteria andIsOnSaleBetween(Integer value1, Integer value2) {
            addCriterion("is_on_sale between", value1, value2, "isOnSale");
            return (Criteria) this;
        }

        public Criteria andIsOnSaleNotBetween(Integer value1, Integer value2) {
            addCriterion("is_on_sale not between", value1, value2, "isOnSale");
            return (Criteria) this;
        }

        public Criteria andIsRecommandIsNull() {
            addCriterion("is_recommand is null");
            return (Criteria) this;
        }

        public Criteria andIsRecommandIsNotNull() {
            addCriterion("is_recommand is not null");
            return (Criteria) this;
        }

        public Criteria andIsRecommandEqualTo(Integer value) {
            addCriterion("is_recommand =", value, "isRecommand");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andIsRecommandEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("is_recommand = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRecommandNotEqualTo(Integer value) {
            addCriterion("is_recommand <>", value, "isRecommand");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andIsRecommandNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("is_recommand <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRecommandGreaterThan(Integer value) {
            addCriterion("is_recommand >", value, "isRecommand");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andIsRecommandGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("is_recommand > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRecommandGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_recommand >=", value, "isRecommand");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andIsRecommandGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("is_recommand >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRecommandLessThan(Integer value) {
            addCriterion("is_recommand <", value, "isRecommand");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andIsRecommandLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("is_recommand < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRecommandLessThanOrEqualTo(Integer value) {
            addCriterion("is_recommand <=", value, "isRecommand");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andIsRecommandLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("is_recommand <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsRecommandIn(List<Integer> values) {
            addCriterion("is_recommand in", values, "isRecommand");
            return (Criteria) this;
        }

        public Criteria andIsRecommandNotIn(List<Integer> values) {
            addCriterion("is_recommand not in", values, "isRecommand");
            return (Criteria) this;
        }

        public Criteria andIsRecommandBetween(Integer value1, Integer value2) {
            addCriterion("is_recommand between", value1, value2, "isRecommand");
            return (Criteria) this;
        }

        public Criteria andIsRecommandNotBetween(Integer value1, Integer value2) {
            addCriterion("is_recommand not between", value1, value2, "isRecommand");
            return (Criteria) this;
        }

        public Criteria andGoodsAddTimeIsNull() {
            addCriterion("goods_add_time is null");
            return (Criteria) this;
        }

        public Criteria andGoodsAddTimeIsNotNull() {
            addCriterion("goods_add_time is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsAddTimeEqualTo(LocalDateTime value) {
            addCriterion("goods_add_time =", value, "goodsAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsAddTimeEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("goods_add_time <>", value, "goodsAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsAddTimeNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("goods_add_time >", value, "goodsAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsAddTimeGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("goods_add_time >=", value, "goodsAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsAddTimeGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsAddTimeLessThan(LocalDateTime value) {
            addCriterion("goods_add_time <", value, "goodsAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsAddTimeLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("goods_add_time <=", value, "goodsAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsAddTimeLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsAddTimeIn(List<LocalDateTime> values) {
            addCriterion("goods_add_time in", values, "goodsAddTime");
            return (Criteria) this;
        }

        public Criteria andGoodsAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("goods_add_time not in", values, "goodsAddTime");
            return (Criteria) this;
        }

        public Criteria andGoodsAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("goods_add_time between", value1, value2, "goodsAddTime");
            return (Criteria) this;
        }

        public Criteria andGoodsAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("goods_add_time not between", value1, value2, "goodsAddTime");
            return (Criteria) this;
        }

        public Criteria andGoodsLastModifyedTimeIsNull() {
            addCriterion("goods_last_modifyed_time is null");
            return (Criteria) this;
        }

        public Criteria andGoodsLastModifyedTimeIsNotNull() {
            addCriterion("goods_last_modifyed_time is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsLastModifyedTimeEqualTo(LocalDateTime value) {
            addCriterion("goods_last_modifyed_time =", value, "goodsLastModifyedTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsLastModifyedTimeEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_last_modifyed_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsLastModifyedTimeNotEqualTo(LocalDateTime value) {
            addCriterion("goods_last_modifyed_time <>", value, "goodsLastModifyedTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsLastModifyedTimeNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_last_modifyed_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsLastModifyedTimeGreaterThan(LocalDateTime value) {
            addCriterion("goods_last_modifyed_time >", value, "goodsLastModifyedTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsLastModifyedTimeGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_last_modifyed_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsLastModifyedTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("goods_last_modifyed_time >=", value, "goodsLastModifyedTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsLastModifyedTimeGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_last_modifyed_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsLastModifyedTimeLessThan(LocalDateTime value) {
            addCriterion("goods_last_modifyed_time <", value, "goodsLastModifyedTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsLastModifyedTimeLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_last_modifyed_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsLastModifyedTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("goods_last_modifyed_time <=", value, "goodsLastModifyedTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsLastModifyedTimeLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_last_modifyed_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsLastModifyedTimeIn(List<LocalDateTime> values) {
            addCriterion("goods_last_modifyed_time in", values, "goodsLastModifyedTime");
            return (Criteria) this;
        }

        public Criteria andGoodsLastModifyedTimeNotIn(List<LocalDateTime> values) {
            addCriterion("goods_last_modifyed_time not in", values, "goodsLastModifyedTime");
            return (Criteria) this;
        }

        public Criteria andGoodsLastModifyedTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("goods_last_modifyed_time between", value1, value2, "goodsLastModifyedTime");
            return (Criteria) this;
        }

        public Criteria andGoodsLastModifyedTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("goods_last_modifyed_time not between", value1, value2, "goodsLastModifyedTime");
            return (Criteria) this;
        }

        public Criteria andGoodsLastSetTimeIsNull() {
            addCriterion("goods_last_set_time is null");
            return (Criteria) this;
        }

        public Criteria andGoodsLastSetTimeIsNotNull() {
            addCriterion("goods_last_set_time is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsLastSetTimeEqualTo(LocalDateTime value) {
            addCriterion("goods_last_set_time =", value, "goodsLastSetTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsLastSetTimeEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_last_set_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsLastSetTimeNotEqualTo(LocalDateTime value) {
            addCriterion("goods_last_set_time <>", value, "goodsLastSetTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsLastSetTimeNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_last_set_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsLastSetTimeGreaterThan(LocalDateTime value) {
            addCriterion("goods_last_set_time >", value, "goodsLastSetTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsLastSetTimeGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_last_set_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsLastSetTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("goods_last_set_time >=", value, "goodsLastSetTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsLastSetTimeGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_last_set_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsLastSetTimeLessThan(LocalDateTime value) {
            addCriterion("goods_last_set_time <", value, "goodsLastSetTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsLastSetTimeLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_last_set_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsLastSetTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("goods_last_set_time <=", value, "goodsLastSetTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsLastSetTimeLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_last_set_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsLastSetTimeIn(List<LocalDateTime> values) {
            addCriterion("goods_last_set_time in", values, "goodsLastSetTime");
            return (Criteria) this;
        }

        public Criteria andGoodsLastSetTimeNotIn(List<LocalDateTime> values) {
            addCriterion("goods_last_set_time not in", values, "goodsLastSetTime");
            return (Criteria) this;
        }

        public Criteria andGoodsLastSetTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("goods_last_set_time between", value1, value2, "goodsLastSetTime");
            return (Criteria) this;
        }

        public Criteria andGoodsLastSetTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("goods_last_set_time not between", value1, value2, "goodsLastSetTime");
            return (Criteria) this;
        }

        public Criteria andGoodsLastRecommandTimeIsNull() {
            addCriterion("goods_last_recommand_time is null");
            return (Criteria) this;
        }

        public Criteria andGoodsLastRecommandTimeIsNotNull() {
            addCriterion("goods_last_recommand_time is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsLastRecommandTimeEqualTo(LocalDateTime value) {
            addCriterion("goods_last_recommand_time =", value, "goodsLastRecommandTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsLastRecommandTimeEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_last_recommand_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsLastRecommandTimeNotEqualTo(LocalDateTime value) {
            addCriterion("goods_last_recommand_time <>", value, "goodsLastRecommandTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsLastRecommandTimeNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_last_recommand_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsLastRecommandTimeGreaterThan(LocalDateTime value) {
            addCriterion("goods_last_recommand_time >", value, "goodsLastRecommandTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsLastRecommandTimeGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_last_recommand_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsLastRecommandTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("goods_last_recommand_time >=", value, "goodsLastRecommandTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsLastRecommandTimeGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_last_recommand_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsLastRecommandTimeLessThan(LocalDateTime value) {
            addCriterion("goods_last_recommand_time <", value, "goodsLastRecommandTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsLastRecommandTimeLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_last_recommand_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsLastRecommandTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("goods_last_recommand_time <=", value, "goodsLastRecommandTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andGoodsLastRecommandTimeLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("goods_last_recommand_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsLastRecommandTimeIn(List<LocalDateTime> values) {
            addCriterion("goods_last_recommand_time in", values, "goodsLastRecommandTime");
            return (Criteria) this;
        }

        public Criteria andGoodsLastRecommandTimeNotIn(List<LocalDateTime> values) {
            addCriterion("goods_last_recommand_time not in", values, "goodsLastRecommandTime");
            return (Criteria) this;
        }

        public Criteria andGoodsLastRecommandTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("goods_last_recommand_time between", value1, value2, "goodsLastRecommandTime");
            return (Criteria) this;
        }

        public Criteria andGoodsLastRecommandTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("goods_last_recommand_time not between", value1, value2, "goodsLastRecommandTime");
            return (Criteria) this;
        }

        public Criteria andIsHotIsNull() {
            addCriterion("is_hot is null");
            return (Criteria) this;
        }

        public Criteria andIsHotIsNotNull() {
            addCriterion("is_hot is not null");
            return (Criteria) this;
        }

        public Criteria andIsHotEqualTo(Integer value) {
            addCriterion("is_hot =", value, "isHot");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andIsHotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("is_hot = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsHotNotEqualTo(Integer value) {
            addCriterion("is_hot <>", value, "isHot");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andIsHotNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("is_hot <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsHotGreaterThan(Integer value) {
            addCriterion("is_hot >", value, "isHot");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andIsHotGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("is_hot > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsHotGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_hot >=", value, "isHot");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andIsHotGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("is_hot >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsHotLessThan(Integer value) {
            addCriterion("is_hot <", value, "isHot");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andIsHotLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("is_hot < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsHotLessThanOrEqualTo(Integer value) {
            addCriterion("is_hot <=", value, "isHot");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andIsHotLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("is_hot <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsHotIn(List<Integer> values) {
            addCriterion("is_hot in", values, "isHot");
            return (Criteria) this;
        }

        public Criteria andIsHotNotIn(List<Integer> values) {
            addCriterion("is_hot not in", values, "isHot");
            return (Criteria) this;
        }

        public Criteria andIsHotBetween(Integer value1, Integer value2) {
            addCriterion("is_hot between", value1, value2, "isHot");
            return (Criteria) this;
        }

        public Criteria andIsHotNotBetween(Integer value1, Integer value2) {
            addCriterion("is_hot not between", value1, value2, "isHot");
            return (Criteria) this;
        }

        public Criteria andBrowsingTimesIsNull() {
            addCriterion("browsing_times is null");
            return (Criteria) this;
        }

        public Criteria andBrowsingTimesIsNotNull() {
            addCriterion("browsing_times is not null");
            return (Criteria) this;
        }

        public Criteria andBrowsingTimesEqualTo(Integer value) {
            addCriterion("browsing_times =", value, "browsingTimes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andBrowsingTimesEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("browsing_times = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrowsingTimesNotEqualTo(Integer value) {
            addCriterion("browsing_times <>", value, "browsingTimes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andBrowsingTimesNotEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("browsing_times <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrowsingTimesGreaterThan(Integer value) {
            addCriterion("browsing_times >", value, "browsingTimes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andBrowsingTimesGreaterThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("browsing_times > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrowsingTimesGreaterThanOrEqualTo(Integer value) {
            addCriterion("browsing_times >=", value, "browsingTimes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andBrowsingTimesGreaterThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("browsing_times >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrowsingTimesLessThan(Integer value) {
            addCriterion("browsing_times <", value, "browsingTimes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andBrowsingTimesLessThanColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("browsing_times < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrowsingTimesLessThanOrEqualTo(Integer value) {
            addCriterion("browsing_times <=", value, "browsingTimes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria andBrowsingTimesLessThanOrEqualToColumn(AllGoodsInfo.Column column) {
            addCriterion(new StringBuilder("browsing_times <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrowsingTimesIn(List<Integer> values) {
            addCriterion("browsing_times in", values, "browsingTimes");
            return (Criteria) this;
        }

        public Criteria andBrowsingTimesNotIn(List<Integer> values) {
            addCriterion("browsing_times not in", values, "browsingTimes");
            return (Criteria) this;
        }

        public Criteria andBrowsingTimesBetween(Integer value1, Integer value2) {
            addCriterion("browsing_times between", value1, value2, "browsingTimes");
            return (Criteria) this;
        }

        public Criteria andBrowsingTimesNotBetween(Integer value1, Integer value2) {
            addCriterion("browsing_times not between", value1, value2, "browsingTimes");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_goods_info
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        private AllGoodsInfoExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        protected Criteria(AllGoodsInfoExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public AllGoodsInfoExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table all_goods_info
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_goods_info
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_goods_info
         *
         * @mbg.generated
         */
        void example(com.cqjtu.sc.admin.goods.db.domain.AllGoodsInfoExample example);
    }
}