<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cqjtu.sc.orderservice.db.dao.AllOrderDetailMapper">
  <resultMap id="MyMap" type="com.cqjtu.sc.orderservice.db.domain.UnpaidOrderInfo">
    <result column="specifications" jdbcType="VARCHAR" property="specifications" typeHandler="com.cqjtu.sc.orderservice.util.JsonStringArrayTypeHandler"/>
  </resultMap>
  <resultMap id="BaseResultMap" type="com.cqjtu.sc.orderservice.db.domain.AllOrderDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="order_detail_id" jdbcType="INTEGER" property="orderDetailId" />
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="all_order_id" jdbcType="INTEGER" property="allOrderId" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="order_detail_number" jdbcType="VARCHAR" property="orderDetailNumber" />
    <result column="goodsStatus" jdbcType="INTEGER" property="goodsstatus" />
    <result column="ratio" jdbcType="INTEGER" property="ratio" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="ship_channel" jdbcType="VARCHAR" property="shipChannel" />
    <result column="ship_sn" jdbcType="VARCHAR" property="shipSn" />
    <result column="ship_time" jdbcType="TIMESTAMP" property="shipTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    order_detail_id, id, goods_id, order_id, all_order_id, quantity, order_detail_number, 
    goodsStatus, ratio, amount, ship_channel, ship_sn, ship_time
  </sql>
  <select id="selectByExample" parameterType="com.cqjtu.sc.orderservice.db.domain.AllOrderDetailExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from all_order_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from all_order_detail
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from all_order_detail
    where order_detail_id = #{orderDetailId,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from all_order_detail
    where order_detail_id = #{orderDetailId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from all_order_detail
    where order_detail_id = #{orderDetailId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cqjtu.sc.orderservice.db.domain.AllOrderDetailExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from all_order_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cqjtu.sc.orderservice.db.domain.AllOrderDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="orderDetailId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into all_order_detail (id, goods_id, order_id, 
      all_order_id, quantity, order_detail_number, 
      goodsStatus, ratio, amount, 
      ship_channel, ship_sn, ship_time
      )
    values (#{id,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, 
      #{allOrderId,jdbcType=INTEGER}, #{quantity,jdbcType=INTEGER}, #{orderDetailNumber,jdbcType=VARCHAR}, 
      #{goodsstatus,jdbcType=INTEGER}, #{ratio,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, 
      #{shipChannel,jdbcType=VARCHAR}, #{shipSn,jdbcType=VARCHAR}, #{shipTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cqjtu.sc.orderservice.db.domain.AllOrderDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="orderDetailId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into all_order_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="allOrderId != null">
        all_order_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="orderDetailNumber != null">
        order_detail_number,
      </if>
      <if test="goodsstatus != null">
        goodsStatus,
      </if>
      <if test="ratio != null">
        ratio,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="shipChannel != null">
        ship_channel,
      </if>
      <if test="shipSn != null">
        ship_sn,
      </if>
      <if test="shipTime != null">
        ship_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="allOrderId != null">
        #{allOrderId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="orderDetailNumber != null">
        #{orderDetailNumber,jdbcType=VARCHAR},
      </if>
      <if test="goodsstatus != null">
        #{goodsstatus,jdbcType=INTEGER},
      </if>
      <if test="ratio != null">
        #{ratio,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="shipChannel != null">
        #{shipChannel,jdbcType=VARCHAR},
      </if>
      <if test="shipSn != null">
        #{shipSn,jdbcType=VARCHAR},
      </if>
      <if test="shipTime != null">
        #{shipTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cqjtu.sc.orderservice.db.domain.AllOrderDetailExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from all_order_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update all_order_detail
    <set>
      <if test="record.orderDetailId != null">
        order_detail_id = #{record.orderDetailId,jdbcType=INTEGER},
      </if>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.allOrderId != null">
        all_order_id = #{record.allOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.orderDetailNumber != null">
        order_detail_number = #{record.orderDetailNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsstatus != null">
        goodsStatus = #{record.goodsstatus,jdbcType=INTEGER},
      </if>
      <if test="record.ratio != null">
        ratio = #{record.ratio,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.shipChannel != null">
        ship_channel = #{record.shipChannel,jdbcType=VARCHAR},
      </if>
      <if test="record.shipSn != null">
        ship_sn = #{record.shipSn,jdbcType=VARCHAR},
      </if>
      <if test="record.shipTime != null">
        ship_time = #{record.shipTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update all_order_detail
    set order_detail_id = #{record.orderDetailId,jdbcType=INTEGER},
      id = #{record.id,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      all_order_id = #{record.allOrderId,jdbcType=INTEGER},
      quantity = #{record.quantity,jdbcType=INTEGER},
      order_detail_number = #{record.orderDetailNumber,jdbcType=VARCHAR},
      goodsStatus = #{record.goodsstatus,jdbcType=INTEGER},
      ratio = #{record.ratio,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DECIMAL},
      ship_channel = #{record.shipChannel,jdbcType=VARCHAR},
      ship_sn = #{record.shipSn,jdbcType=VARCHAR},
      ship_time = #{record.shipTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cqjtu.sc.orderservice.db.domain.AllOrderDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update all_order_detail
    <set>
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="allOrderId != null">
        all_order_id = #{allOrderId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="orderDetailNumber != null">
        order_detail_number = #{orderDetailNumber,jdbcType=VARCHAR},
      </if>
      <if test="goodsstatus != null">
        goodsStatus = #{goodsstatus,jdbcType=INTEGER},
      </if>
      <if test="ratio != null">
        ratio = #{ratio,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="shipChannel != null">
        ship_channel = #{shipChannel,jdbcType=VARCHAR},
      </if>
      <if test="shipSn != null">
        ship_sn = #{shipSn,jdbcType=VARCHAR},
      </if>
      <if test="shipTime != null">
        ship_time = #{shipTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where order_detail_id = #{orderDetailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cqjtu.sc.orderservice.db.domain.AllOrderDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update all_order_detail
    set id = #{id,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      all_order_id = #{allOrderId,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      order_detail_number = #{orderDetailNumber,jdbcType=VARCHAR},
      goodsStatus = #{goodsstatus,jdbcType=INTEGER},
      ratio = #{ratio,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      ship_channel = #{shipChannel,jdbcType=VARCHAR},
      ship_sn = #{shipSn,jdbcType=VARCHAR},
      ship_time = #{shipTime,jdbcType=TIMESTAMP}
    where order_detail_id = #{orderDetailId,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.cqjtu.sc.orderservice.db.domain.AllOrderDetailExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from all_order_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from all_order_detail
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <resultMap id="OrderVoMap" type="com.cqjtu.sc.orderservice.vo.OrderVo">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="goodsStatus" jdbcType="INTEGER" property="orderStatus" />
  </resultMap>

  <insert id="batchInsertOrderDetail">
    insert into  all_order_detail(id, goods_id,order_id,goodsStatus,quantity,amount,order_detail_number) values
    <foreach collection="list" item="orderDetail" separator=",">
      (#{orderDetail.id}, #{orderDetail.goodsId} ,#{orderDetail.orderId} ,#{orderDetail.goodsstatus} ,#{orderDetail.quantity} ,#{orderDetail.amount} ,#{orderDetail.orderDetailNumber})
    </foreach>
  </insert>

  <select id="selectOrder" parameterType="map" resultMap="OrderVoMap">
    select t1.user_info_id as userId,t3.order_detail_id as id,t3.goodsStatus as goodsStatus,t3.order_detail_number as orderSn,t3.amount as orderPrice,t2.gen_time as genTime
    from all_user_info t1,all_order t2,all_order_detail t3
    <where>
      t1.user_info_id=t2.user_info_id and t2.order_id=t3.order_id
      and t3.goodsStatus in
      <foreach close=")" collection="goodsStatus" item="status" open="(" separator=",">
      #{status}
      </foreach>
      <if test="userId != null">
        and t1.user_info_id=#{userId,jdbcType=INTEGER}
      </if>
      <if test="orderSn != null">
        and t3.order_detail_number=#{orderSn,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
  <select id="selectOrderDetail" parameterType="map" resultType="com.cqjtu.sc.orderservice.vo.OrderDetailVo">
    select t3.goodsStatus as orderStatus,t3.order_detail_number as orderSn,t3.amount as actualPrice,t2.gen_time as genTime,t4.goods_name as goodsName,t3.quantity as number,t5.specifications as specifications,t2.address_str as addressInfo,t6.member_number as memberNumber,t3.ship_channel as shipChannel,t3.ship_sn as shipSn,t3.ship_time as shipTime,t2.pay_time as payTime
    from all_user_info t1,all_order t2,all_order_detail t3,all_goods_info t4,all_goods_specifi_att_value t5,all_user_info t6
    where t1.user_info_id=t2.user_info_id and t2.order_id=t3.order_id and t3.goods_id=t4.goods_id and t3.id=t5.id and t2.user_info_id=t6.user_info_id and  t3.order_detail_id=#{userId,jdbcType=INTEGER};
  </select>



  <select id="countForGoodsStatus" parameterType="java.util.Map" resultType="com.cqjtu.sc.orderservice.util.CountGoodsStatus">
    select goodsStatus as goodsStatus,count(*) as sum from all_order_detail t1,all_order t2
    where t1.order_id=t2.order_id and t2.user_info_id=#{userId,jdbcType=INTEGER}
    group by goodsStatus;
  </select>

  <select id="selectUnpaidOrderInfo" parameterType="map" resultMap="MyMap">
    select t3.goods_name as goodsName,t1.order_id as id,t1.amount as actualPrice,t3.goods_name as goodsName,t4.specifications as specifications,t5.url as picUrl,t2.quantity as number,t1.order_number as orderSn
    from all_order t1,all_order_detail t2,all_goods_info t3,all_goods_specifi_att_value t4,all_goods_specifi_img t5
    where t1.order_id=t2.order_id and t2.goods_id=t3.goods_id and t2.id=t4.id and t2.goods_id=t5.goods_id and t1.user_info_id=#{userId,jdbcType=INTEGER} and t5.type=3 and t1.pay_time is null and t1.order_id in
    <foreach close=")" collection="orderIdList" item="orderId" open="(" separator=",">
      #{orderId}
    </foreach>
  </select>

  <select id="selectByUserIdAndStatus" parameterType="map" resultMap="MyMap">
    select t2.goodsStatus as status,t2.order_detail_id as id,t2.amount as actualPrice,t3.goods_name as goodsName,t4.specifications as specifications,t5.url as picUrl,t2.quantity as number,t1.order_number as orderSn
    from all_order t1,all_order_detail t2,all_goods_info t3,all_goods_specifi_att_value t4,all_goods_specifi_img t5
    where t1.order_id=t2.order_id and t2.goods_id=t3.goods_id and t2.id=t4.id and t2.goods_id=t5.goods_id and t1.user_info_id=#{userId,jdbcType=INTEGER} and t5.type=3
    <if test="status != null">
      and goodsStatus in
      <foreach close=")" collection="status" item="status" open="(" separator=",">
        #{status}
      </foreach>
    </if>
    limit #{limit,jdbcType=INTEGER} offset #{offset,jdbcType=INTEGER}
  </select>

  <select id="countByUserIdAndStatus" parameterType="map" resultType="int">
    select ceil(count(*)/#{limit,jdbcType=INTEGER}) from all_order t1,all_order_detail t2
    where t1.order_id=t2.order_id and t1.user_info_id=#{userId,jdbcType=INTEGER}
    <if test="status != null">
      and goodsStatus in
      <foreach close=")" collection="status" item="status" open="(" separator=",">
        #{status}
      </foreach>
    </if>
  </select>

</mapper>