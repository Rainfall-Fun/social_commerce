package com.cqjtu.sc.orderservice.db.domain;

import java.util.ArrayList;
import java.util.List;

public class AllCarrigeAddressExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    public AllCarrigeAddressExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    public AllCarrigeAddressExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    public AllCarrigeAddressExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        AllCarrigeAddressExample example = new AllCarrigeAddressExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    public AllCarrigeAddressExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    public AllCarrigeAddressExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andAddressIdIsNull() {
            addCriterion("address_id is null");
            return (Criteria) this;
        }

        public Criteria andAddressIdIsNotNull() {
            addCriterion("address_id is not null");
            return (Criteria) this;
        }

        public Criteria andAddressIdEqualTo(Integer value) {
            addCriterion("address_id =", value, "addressId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andAddressIdEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("address_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressIdNotEqualTo(Integer value) {
            addCriterion("address_id <>", value, "addressId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andAddressIdNotEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("address_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressIdGreaterThan(Integer value) {
            addCriterion("address_id >", value, "addressId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andAddressIdGreaterThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("address_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("address_id >=", value, "addressId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andAddressIdGreaterThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("address_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressIdLessThan(Integer value) {
            addCriterion("address_id <", value, "addressId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andAddressIdLessThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("address_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressIdLessThanOrEqualTo(Integer value) {
            addCriterion("address_id <=", value, "addressId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andAddressIdLessThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("address_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressIdIn(List<Integer> values) {
            addCriterion("address_id in", values, "addressId");
            return (Criteria) this;
        }

        public Criteria andAddressIdNotIn(List<Integer> values) {
            addCriterion("address_id not in", values, "addressId");
            return (Criteria) this;
        }

        public Criteria andAddressIdBetween(Integer value1, Integer value2) {
            addCriterion("address_id between", value1, value2, "addressId");
            return (Criteria) this;
        }

        public Criteria andAddressIdNotBetween(Integer value1, Integer value2) {
            addCriterion("address_id not between", value1, value2, "addressId");
            return (Criteria) this;
        }

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        public Criteria andUserInfoId1IsNull() {
            addCriterion("user_info_id1 is null");
            return (Criteria) this;
        }

        public Criteria andUserInfoId1IsNotNull() {
            addCriterion("user_info_id1 is not null");
            return (Criteria) this;
        }

        public Criteria andUserInfoId1EqualTo(Integer value) {
            addCriterion("user_info_id1 =", value, "userInfoId1");
=======
        public Criteria andUserInfoIdIsNull() {
            addCriterion("user_info_id is null");
=======
        public Criteria andUserInfoId1IsNull() {
            addCriterion("user_info_id1 is null");
>>>>>>> parent of 547cab6... 下单已经实现
=======
        public Criteria andUserInfoId1IsNull() {
            addCriterion("user_info_id1 is null");
>>>>>>> parent of 547cab6... 下单已经实现
            return (Criteria) this;
        }

        public Criteria andUserInfoId1IsNotNull() {
            addCriterion("user_info_id1 is not null");
            return (Criteria) this;
        }

<<<<<<< HEAD
<<<<<<< HEAD
        public Criteria andUserInfoIdEqualTo(Integer value) {
            addCriterion("user_info_id =", value, "userInfoId");
>>>>>>> 547cab64eb76ae209f57ad6843f97b3160e0f76a
=======
        public Criteria andUserInfoId1EqualTo(Integer value) {
            addCriterion("user_info_id1 =", value, "userInfoId1");
>>>>>>> parent of 547cab6... 下单已经实现
=======
        public Criteria andUserInfoId1EqualTo(Integer value) {
            addCriterion("user_info_id1 =", value, "userInfoId1");
>>>>>>> parent of 547cab6... 下单已经实现
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        public Criteria andUserInfoId1EqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id1 = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoId1NotEqualTo(Integer value) {
            addCriterion("user_info_id1 <>", value, "userInfoId1");
=======
        public Criteria andUserInfoIdEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoIdNotEqualTo(Integer value) {
            addCriterion("user_info_id <>", value, "userInfoId");
>>>>>>> 547cab64eb76ae209f57ad6843f97b3160e0f76a
=======
        public Criteria andUserInfoId1EqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id1 = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoId1NotEqualTo(Integer value) {
            addCriterion("user_info_id1 <>", value, "userInfoId1");
>>>>>>> parent of 547cab6... 下单已经实现
=======
        public Criteria andUserInfoId1EqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id1 = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoId1NotEqualTo(Integer value) {
            addCriterion("user_info_id1 <>", value, "userInfoId1");
>>>>>>> parent of 547cab6... 下单已经实现
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        public Criteria andUserInfoId1NotEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id1 <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoId1GreaterThan(Integer value) {
            addCriterion("user_info_id1 >", value, "userInfoId1");
=======
        public Criteria andUserInfoIdNotEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoIdGreaterThan(Integer value) {
            addCriterion("user_info_id >", value, "userInfoId");
>>>>>>> 547cab64eb76ae209f57ad6843f97b3160e0f76a
=======
        public Criteria andUserInfoId1NotEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id1 <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoId1GreaterThan(Integer value) {
            addCriterion("user_info_id1 >", value, "userInfoId1");
>>>>>>> parent of 547cab6... 下单已经实现
=======
        public Criteria andUserInfoId1NotEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id1 <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoId1GreaterThan(Integer value) {
            addCriterion("user_info_id1 >", value, "userInfoId1");
>>>>>>> parent of 547cab6... 下单已经实现
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        public Criteria andUserInfoId1GreaterThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id1 > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoId1GreaterThanOrEqualTo(Integer value) {
            addCriterion("user_info_id1 >=", value, "userInfoId1");
=======
        public Criteria andUserInfoIdGreaterThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_info_id >=", value, "userInfoId");
>>>>>>> 547cab64eb76ae209f57ad6843f97b3160e0f76a
=======
        public Criteria andUserInfoId1GreaterThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id1 > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoId1GreaterThanOrEqualTo(Integer value) {
            addCriterion("user_info_id1 >=", value, "userInfoId1");
>>>>>>> parent of 547cab6... 下单已经实现
=======
        public Criteria andUserInfoId1GreaterThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id1 > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoId1GreaterThanOrEqualTo(Integer value) {
            addCriterion("user_info_id1 >=", value, "userInfoId1");
>>>>>>> parent of 547cab6... 下单已经实现
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        public Criteria andUserInfoId1GreaterThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id1 >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoId1LessThan(Integer value) {
            addCriterion("user_info_id1 <", value, "userInfoId1");
=======
        public Criteria andUserInfoIdGreaterThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoIdLessThan(Integer value) {
            addCriterion("user_info_id <", value, "userInfoId");
>>>>>>> 547cab64eb76ae209f57ad6843f97b3160e0f76a
=======
        public Criteria andUserInfoId1GreaterThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id1 >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoId1LessThan(Integer value) {
            addCriterion("user_info_id1 <", value, "userInfoId1");
>>>>>>> parent of 547cab6... 下单已经实现
=======
        public Criteria andUserInfoId1GreaterThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id1 >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoId1LessThan(Integer value) {
            addCriterion("user_info_id1 <", value, "userInfoId1");
>>>>>>> parent of 547cab6... 下单已经实现
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        public Criteria andUserInfoId1LessThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id1 < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoId1LessThanOrEqualTo(Integer value) {
            addCriterion("user_info_id1 <=", value, "userInfoId1");
=======
        public Criteria andUserInfoIdLessThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_info_id <=", value, "userInfoId");
>>>>>>> 547cab64eb76ae209f57ad6843f97b3160e0f76a
=======
        public Criteria andUserInfoId1LessThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id1 < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoId1LessThanOrEqualTo(Integer value) {
            addCriterion("user_info_id1 <=", value, "userInfoId1");
>>>>>>> parent of 547cab6... 下单已经实现
=======
        public Criteria andUserInfoId1LessThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id1 < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoId1LessThanOrEqualTo(Integer value) {
            addCriterion("user_info_id1 <=", value, "userInfoId1");
>>>>>>> parent of 547cab6... 下单已经实现
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        public Criteria andUserInfoId1LessThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id1 <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoId1In(List<Integer> values) {
            addCriterion("user_info_id1 in", values, "userInfoId1");
            return (Criteria) this;
        }

        public Criteria andUserInfoId1NotIn(List<Integer> values) {
            addCriterion("user_info_id1 not in", values, "userInfoId1");
            return (Criteria) this;
        }

        public Criteria andUserInfoId1Between(Integer value1, Integer value2) {
            addCriterion("user_info_id1 between", value1, value2, "userInfoId1");
            return (Criteria) this;
        }

        public Criteria andUserInfoId1NotBetween(Integer value1, Integer value2) {
            addCriterion("user_info_id1 not between", value1, value2, "userInfoId1");
=======
        public Criteria andUserInfoIdLessThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id <= ").append(column.getEscapedColumnName()).toString());
=======
        public Criteria andUserInfoId1LessThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id1 <= ").append(column.getEscapedColumnName()).toString());
>>>>>>> parent of 547cab6... 下单已经实现
=======
        public Criteria andUserInfoId1LessThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("user_info_id1 <= ").append(column.getEscapedColumnName()).toString());
>>>>>>> parent of 547cab6... 下单已经实现
            return (Criteria) this;
        }

        public Criteria andUserInfoId1In(List<Integer> values) {
            addCriterion("user_info_id1 in", values, "userInfoId1");
            return (Criteria) this;
        }

        public Criteria andUserInfoId1NotIn(List<Integer> values) {
            addCriterion("user_info_id1 not in", values, "userInfoId1");
            return (Criteria) this;
        }

        public Criteria andUserInfoId1Between(Integer value1, Integer value2) {
            addCriterion("user_info_id1 between", value1, value2, "userInfoId1");
            return (Criteria) this;
        }

<<<<<<< HEAD
<<<<<<< HEAD
        public Criteria andUserInfoIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_info_id not between", value1, value2, "userInfoId");
>>>>>>> 547cab64eb76ae209f57ad6843f97b3160e0f76a
=======
        public Criteria andUserInfoId1NotBetween(Integer value1, Integer value2) {
            addCriterion("user_info_id1 not between", value1, value2, "userInfoId1");
>>>>>>> parent of 547cab6... 下单已经实现
=======
        public Criteria andUserInfoId1NotBetween(Integer value1, Integer value2) {
            addCriterion("user_info_id1 not between", value1, value2, "userInfoId1");
>>>>>>> parent of 547cab6... 下单已经实现
            return (Criteria) this;
        }

        public Criteria andConsigneeIsNull() {
            addCriterion("consignee is null");
            return (Criteria) this;
        }

        public Criteria andConsigneeIsNotNull() {
            addCriterion("consignee is not null");
            return (Criteria) this;
        }

        public Criteria andConsigneeEqualTo(String value) {
            addCriterion("consignee =", value, "consignee");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andConsigneeEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("consignee = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConsigneeNotEqualTo(String value) {
            addCriterion("consignee <>", value, "consignee");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andConsigneeNotEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("consignee <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConsigneeGreaterThan(String value) {
            addCriterion("consignee >", value, "consignee");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andConsigneeGreaterThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("consignee > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConsigneeGreaterThanOrEqualTo(String value) {
            addCriterion("consignee >=", value, "consignee");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andConsigneeGreaterThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("consignee >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConsigneeLessThan(String value) {
            addCriterion("consignee <", value, "consignee");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andConsigneeLessThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("consignee < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConsigneeLessThanOrEqualTo(String value) {
            addCriterion("consignee <=", value, "consignee");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andConsigneeLessThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("consignee <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConsigneeLike(String value) {
            addCriterion("consignee like", value, "consignee");
            return (Criteria) this;
        }

        public Criteria andConsigneeNotLike(String value) {
            addCriterion("consignee not like", value, "consignee");
            return (Criteria) this;
        }

        public Criteria andConsigneeIn(List<String> values) {
            addCriterion("consignee in", values, "consignee");
            return (Criteria) this;
        }

        public Criteria andConsigneeNotIn(List<String> values) {
            addCriterion("consignee not in", values, "consignee");
            return (Criteria) this;
        }

        public Criteria andConsigneeBetween(String value1, String value2) {
            addCriterion("consignee between", value1, value2, "consignee");
            return (Criteria) this;
        }

        public Criteria andConsigneeNotBetween(String value1, String value2) {
            addCriterion("consignee not between", value1, value2, "consignee");
            return (Criteria) this;
        }

        public Criteria andTelIsNull() {
            addCriterion("tel is null");
            return (Criteria) this;
        }

        public Criteria andTelIsNotNull() {
            addCriterion("tel is not null");
            return (Criteria) this;
        }

        public Criteria andTelEqualTo(String value) {
            addCriterion("tel =", value, "tel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andTelEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("tel = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTelNotEqualTo(String value) {
            addCriterion("tel <>", value, "tel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andTelNotEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("tel <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTelGreaterThan(String value) {
            addCriterion("tel >", value, "tel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andTelGreaterThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("tel > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTelGreaterThanOrEqualTo(String value) {
            addCriterion("tel >=", value, "tel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andTelGreaterThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("tel >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTelLessThan(String value) {
            addCriterion("tel <", value, "tel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andTelLessThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("tel < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTelLessThanOrEqualTo(String value) {
            addCriterion("tel <=", value, "tel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andTelLessThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("tel <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTelLike(String value) {
            addCriterion("tel like", value, "tel");
            return (Criteria) this;
        }

        public Criteria andTelNotLike(String value) {
            addCriterion("tel not like", value, "tel");
            return (Criteria) this;
        }

        public Criteria andTelIn(List<String> values) {
            addCriterion("tel in", values, "tel");
            return (Criteria) this;
        }

        public Criteria andTelNotIn(List<String> values) {
            addCriterion("tel not in", values, "tel");
            return (Criteria) this;
        }

        public Criteria andTelBetween(String value1, String value2) {
            addCriterion("tel between", value1, value2, "tel");
            return (Criteria) this;
        }

        public Criteria andTelNotBetween(String value1, String value2) {
            addCriterion("tel not between", value1, value2, "tel");
            return (Criteria) this;
        }

        public Criteria andProvinceIsNull() {
            addCriterion("province is null");
            return (Criteria) this;
        }

        public Criteria andProvinceIsNotNull() {
            addCriterion("province is not null");
            return (Criteria) this;
        }

        public Criteria andProvinceEqualTo(Integer value) {
            addCriterion("province =", value, "province");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andProvinceEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("province = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProvinceNotEqualTo(Integer value) {
            addCriterion("province <>", value, "province");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andProvinceNotEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("province <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProvinceGreaterThan(Integer value) {
            addCriterion("province >", value, "province");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andProvinceGreaterThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("province > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProvinceGreaterThanOrEqualTo(Integer value) {
            addCriterion("province >=", value, "province");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andProvinceGreaterThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("province >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProvinceLessThan(Integer value) {
            addCriterion("province <", value, "province");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andProvinceLessThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("province < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProvinceLessThanOrEqualTo(Integer value) {
            addCriterion("province <=", value, "province");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andProvinceLessThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("province <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProvinceIn(List<Integer> values) {
            addCriterion("province in", values, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceNotIn(List<Integer> values) {
            addCriterion("province not in", values, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceBetween(Integer value1, Integer value2) {
            addCriterion("province between", value1, value2, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceNotBetween(Integer value1, Integer value2) {
            addCriterion("province not between", value1, value2, "province");
            return (Criteria) this;
        }

        public Criteria andCityIsNull() {
            addCriterion("city is null");
            return (Criteria) this;
        }

        public Criteria andCityIsNotNull() {
            addCriterion("city is not null");
            return (Criteria) this;
        }

        public Criteria andCityEqualTo(Integer value) {
            addCriterion("city =", value, "city");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andCityEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("city = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCityNotEqualTo(Integer value) {
            addCriterion("city <>", value, "city");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andCityNotEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("city <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCityGreaterThan(Integer value) {
            addCriterion("city >", value, "city");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andCityGreaterThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("city > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCityGreaterThanOrEqualTo(Integer value) {
            addCriterion("city >=", value, "city");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andCityGreaterThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("city >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCityLessThan(Integer value) {
            addCriterion("city <", value, "city");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andCityLessThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("city < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCityLessThanOrEqualTo(Integer value) {
            addCriterion("city <=", value, "city");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andCityLessThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("city <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCityIn(List<Integer> values) {
            addCriterion("city in", values, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotIn(List<Integer> values) {
            addCriterion("city not in", values, "city");
            return (Criteria) this;
        }

        public Criteria andCityBetween(Integer value1, Integer value2) {
            addCriterion("city between", value1, value2, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotBetween(Integer value1, Integer value2) {
            addCriterion("city not between", value1, value2, "city");
            return (Criteria) this;
        }

        public Criteria andCountyIsNull() {
            addCriterion("county is null");
            return (Criteria) this;
        }

        public Criteria andCountyIsNotNull() {
            addCriterion("county is not null");
            return (Criteria) this;
        }

        public Criteria andCountyEqualTo(Integer value) {
            addCriterion("county =", value, "county");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andCountyEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("county = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCountyNotEqualTo(Integer value) {
            addCriterion("county <>", value, "county");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andCountyNotEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("county <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCountyGreaterThan(Integer value) {
            addCriterion("county >", value, "county");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andCountyGreaterThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("county > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCountyGreaterThanOrEqualTo(Integer value) {
            addCriterion("county >=", value, "county");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andCountyGreaterThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("county >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCountyLessThan(Integer value) {
            addCriterion("county <", value, "county");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andCountyLessThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("county < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCountyLessThanOrEqualTo(Integer value) {
            addCriterion("county <=", value, "county");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andCountyLessThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("county <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCountyIn(List<Integer> values) {
            addCriterion("county in", values, "county");
            return (Criteria) this;
        }

        public Criteria andCountyNotIn(List<Integer> values) {
            addCriterion("county not in", values, "county");
            return (Criteria) this;
        }

        public Criteria andCountyBetween(Integer value1, Integer value2) {
            addCriterion("county between", value1, value2, "county");
            return (Criteria) this;
        }

        public Criteria andCountyNotBetween(Integer value1, Integer value2) {
            addCriterion("county not between", value1, value2, "county");
            return (Criteria) this;
        }

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        public Criteria andAdressIsNull() {
            addCriterion("adress is null");
            return (Criteria) this;
        }

        public Criteria andAdressIsNotNull() {
            addCriterion("adress is not null");
            return (Criteria) this;
        }

        public Criteria andAdressEqualTo(String value) {
            addCriterion("adress =", value, "adress");
=======
        public Criteria andAddressIsNull() {
            addCriterion("address is null");
=======
        public Criteria andAdressIsNull() {
            addCriterion("adress is null");
>>>>>>> parent of 547cab6... 下单已经实现
=======
        public Criteria andAdressIsNull() {
            addCriterion("adress is null");
>>>>>>> parent of 547cab6... 下单已经实现
            return (Criteria) this;
        }

        public Criteria andAdressIsNotNull() {
            addCriterion("adress is not null");
            return (Criteria) this;
        }

<<<<<<< HEAD
<<<<<<< HEAD
        public Criteria andAddressEqualTo(String value) {
            addCriterion("address =", value, "address");
>>>>>>> 547cab64eb76ae209f57ad6843f97b3160e0f76a
=======
        public Criteria andAdressEqualTo(String value) {
            addCriterion("adress =", value, "adress");
>>>>>>> parent of 547cab6... 下单已经实现
=======
        public Criteria andAdressEqualTo(String value) {
            addCriterion("adress =", value, "adress");
>>>>>>> parent of 547cab6... 下单已经实现
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        public Criteria andAdressEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("adress = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdressNotEqualTo(String value) {
            addCriterion("adress <>", value, "adress");
=======
        public Criteria andAddressEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("address = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressNotEqualTo(String value) {
            addCriterion("address <>", value, "address");
>>>>>>> 547cab64eb76ae209f57ad6843f97b3160e0f76a
=======
        public Criteria andAdressEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("adress = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdressNotEqualTo(String value) {
            addCriterion("adress <>", value, "adress");
>>>>>>> parent of 547cab6... 下单已经实现
=======
        public Criteria andAdressEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("adress = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdressNotEqualTo(String value) {
            addCriterion("adress <>", value, "adress");
>>>>>>> parent of 547cab6... 下单已经实现
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        public Criteria andAdressNotEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("adress <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdressGreaterThan(String value) {
            addCriterion("adress >", value, "adress");
=======
        public Criteria andAddressNotEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("address <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThan(String value) {
            addCriterion("address >", value, "address");
>>>>>>> 547cab64eb76ae209f57ad6843f97b3160e0f76a
=======
        public Criteria andAdressNotEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("adress <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdressGreaterThan(String value) {
            addCriterion("adress >", value, "adress");
>>>>>>> parent of 547cab6... 下单已经实现
=======
        public Criteria andAdressNotEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("adress <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdressGreaterThan(String value) {
            addCriterion("adress >", value, "adress");
>>>>>>> parent of 547cab6... 下单已经实现
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        public Criteria andAdressGreaterThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("adress > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdressGreaterThanOrEqualTo(String value) {
            addCriterion("adress >=", value, "adress");
=======
        public Criteria andAddressGreaterThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("address > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThanOrEqualTo(String value) {
            addCriterion("address >=", value, "address");
>>>>>>> 547cab64eb76ae209f57ad6843f97b3160e0f76a
=======
        public Criteria andAdressGreaterThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("adress > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdressGreaterThanOrEqualTo(String value) {
            addCriterion("adress >=", value, "adress");
>>>>>>> parent of 547cab6... 下单已经实现
=======
        public Criteria andAdressGreaterThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("adress > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdressGreaterThanOrEqualTo(String value) {
            addCriterion("adress >=", value, "adress");
>>>>>>> parent of 547cab6... 下单已经实现
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        public Criteria andAdressGreaterThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("adress >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdressLessThan(String value) {
            addCriterion("adress <", value, "adress");
=======
        public Criteria andAddressGreaterThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("address >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressLessThan(String value) {
            addCriterion("address <", value, "address");
>>>>>>> 547cab64eb76ae209f57ad6843f97b3160e0f76a
=======
        public Criteria andAdressGreaterThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("adress >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdressLessThan(String value) {
            addCriterion("adress <", value, "adress");
>>>>>>> parent of 547cab6... 下单已经实现
=======
        public Criteria andAdressGreaterThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("adress >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdressLessThan(String value) {
            addCriterion("adress <", value, "adress");
>>>>>>> parent of 547cab6... 下单已经实现
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        public Criteria andAdressLessThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("adress < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdressLessThanOrEqualTo(String value) {
            addCriterion("adress <=", value, "adress");
=======
        public Criteria andAddressLessThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("address < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressLessThanOrEqualTo(String value) {
            addCriterion("address <=", value, "address");
>>>>>>> 547cab64eb76ae209f57ad6843f97b3160e0f76a
=======
        public Criteria andAdressLessThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("adress < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdressLessThanOrEqualTo(String value) {
            addCriterion("adress <=", value, "adress");
>>>>>>> parent of 547cab6... 下单已经实现
=======
        public Criteria andAdressLessThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("adress < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdressLessThanOrEqualTo(String value) {
            addCriterion("adress <=", value, "adress");
>>>>>>> parent of 547cab6... 下单已经实现
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        public Criteria andAdressLessThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("adress <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdressLike(String value) {
            addCriterion("adress like", value, "adress");
            return (Criteria) this;
        }

        public Criteria andAdressNotLike(String value) {
            addCriterion("adress not like", value, "adress");
            return (Criteria) this;
        }

        public Criteria andAdressIn(List<String> values) {
            addCriterion("adress in", values, "adress");
            return (Criteria) this;
        }

        public Criteria andAdressNotIn(List<String> values) {
            addCriterion("adress not in", values, "adress");
            return (Criteria) this;
        }

        public Criteria andAdressBetween(String value1, String value2) {
            addCriterion("adress between", value1, value2, "adress");
            return (Criteria) this;
        }

        public Criteria andAdressNotBetween(String value1, String value2) {
            addCriterion("adress not between", value1, value2, "adress");
=======
        public Criteria andAddressLessThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("address <= ").append(column.getEscapedColumnName()).toString());
=======
        public Criteria andAdressLessThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("adress <= ").append(column.getEscapedColumnName()).toString());
>>>>>>> parent of 547cab6... 下单已经实现
=======
        public Criteria andAdressLessThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("adress <= ").append(column.getEscapedColumnName()).toString());
>>>>>>> parent of 547cab6... 下单已经实现
            return (Criteria) this;
        }

        public Criteria andAdressLike(String value) {
            addCriterion("adress like", value, "adress");
            return (Criteria) this;
        }

        public Criteria andAdressNotLike(String value) {
            addCriterion("adress not like", value, "adress");
            return (Criteria) this;
        }

        public Criteria andAdressIn(List<String> values) {
            addCriterion("adress in", values, "adress");
            return (Criteria) this;
        }

        public Criteria andAdressNotIn(List<String> values) {
            addCriterion("adress not in", values, "adress");
            return (Criteria) this;
        }

        public Criteria andAdressBetween(String value1, String value2) {
            addCriterion("adress between", value1, value2, "adress");
            return (Criteria) this;
        }

<<<<<<< HEAD
<<<<<<< HEAD
        public Criteria andAddressNotBetween(String value1, String value2) {
            addCriterion("address not between", value1, value2, "address");
>>>>>>> 547cab64eb76ae209f57ad6843f97b3160e0f76a
=======
        public Criteria andAdressNotBetween(String value1, String value2) {
            addCriterion("adress not between", value1, value2, "adress");
>>>>>>> parent of 547cab6... 下单已经实现
=======
        public Criteria andAdressNotBetween(String value1, String value2) {
            addCriterion("adress not between", value1, value2, "adress");
>>>>>>> parent of 547cab6... 下单已经实现
            return (Criteria) this;
        }

        public Criteria andIsDefaultIsNull() {
            addCriterion("is_default is null");
            return (Criteria) this;
        }

        public Criteria andIsDefaultIsNotNull() {
            addCriterion("is_default is not null");
            return (Criteria) this;
        }

        public Criteria andIsDefaultEqualTo(Integer value) {
            addCriterion("is_default =", value, "isDefault");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andIsDefaultEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("is_default = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDefaultNotEqualTo(Integer value) {
            addCriterion("is_default <>", value, "isDefault");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andIsDefaultNotEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("is_default <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDefaultGreaterThan(Integer value) {
            addCriterion("is_default >", value, "isDefault");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andIsDefaultGreaterThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("is_default > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDefaultGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_default >=", value, "isDefault");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andIsDefaultGreaterThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("is_default >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDefaultLessThan(Integer value) {
            addCriterion("is_default <", value, "isDefault");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andIsDefaultLessThanColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("is_default < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDefaultLessThanOrEqualTo(Integer value) {
            addCriterion("is_default <=", value, "isDefault");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria andIsDefaultLessThanOrEqualToColumn(AllCarrigeAddress.Column column) {
            addCriterion(new StringBuilder("is_default <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDefaultIn(List<Integer> values) {
            addCriterion("is_default in", values, "isDefault");
            return (Criteria) this;
        }

        public Criteria andIsDefaultNotIn(List<Integer> values) {
            addCriterion("is_default not in", values, "isDefault");
            return (Criteria) this;
        }

        public Criteria andIsDefaultBetween(Integer value1, Integer value2) {
            addCriterion("is_default between", value1, value2, "isDefault");
            return (Criteria) this;
        }

        public Criteria andIsDefaultNotBetween(Integer value1, Integer value2) {
            addCriterion("is_default not between", value1, value2, "isDefault");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_carrige_address
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        private AllCarrigeAddressExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        protected Criteria(AllCarrigeAddressExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public AllCarrigeAddressExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table all_carrige_address
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_carrige_address
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_carrige_address
         *
         * @mbg.generated
         */
        void example(com.cqjtu.sc.orderservice.db.domain.AllCarrigeAddressExample example);
    }
}