package com.cqjtu.sc.orderservice.db.domain;

import java.math.BigDecimal;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.List;

public class AllOrderExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_order
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_order
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_order
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_order
     *
     * @mbg.generated
     */
    public AllOrderExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_order
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_order
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_order
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_order
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_order
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_order
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_order
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_order
     *
     * @mbg.generated
     */
    public AllOrderExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_order
     *
     * @mbg.generated
     */
    public AllOrderExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_order
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_order
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_order
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_order
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        AllOrderExample example = new AllOrderExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_order
     *
     * @mbg.generated
     */
    public AllOrderExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_order
     *
     * @mbg.generated
     */
    public AllOrderExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_order
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andOrderIdIsNull() {
            addCriterion("order_id is null");
            return (Criteria) this;
        }

        public Criteria andOrderIdIsNotNull() {
            addCriterion("order_id is not null");
            return (Criteria) this;
        }

        public Criteria andOrderIdEqualTo(Integer value) {
            addCriterion("order_id =", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andOrderIdEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("order_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdNotEqualTo(Integer value) {
            addCriterion("order_id <>", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andOrderIdNotEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("order_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdGreaterThan(Integer value) {
            addCriterion("order_id >", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andOrderIdGreaterThanColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("order_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("order_id >=", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andOrderIdGreaterThanOrEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("order_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdLessThan(Integer value) {
            addCriterion("order_id <", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andOrderIdLessThanColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("order_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdLessThanOrEqualTo(Integer value) {
            addCriterion("order_id <=", value, "orderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andOrderIdLessThanOrEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("order_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderIdIn(List<Integer> values) {
            addCriterion("order_id in", values, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdNotIn(List<Integer> values) {
            addCriterion("order_id not in", values, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdBetween(Integer value1, Integer value2) {
            addCriterion("order_id between", value1, value2, "orderId");
            return (Criteria) this;
        }

        public Criteria andOrderIdNotBetween(Integer value1, Integer value2) {
            addCriterion("order_id not between", value1, value2, "orderId");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdIsNull() {
            addCriterion("user_info_id is null");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdIsNotNull() {
            addCriterion("user_info_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdEqualTo(Integer value) {
            addCriterion("user_info_id =", value, "userInfoId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andUserInfoIdEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("user_info_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoIdNotEqualTo(Integer value) {
            addCriterion("user_info_id <>", value, "userInfoId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andUserInfoIdNotEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("user_info_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoIdGreaterThan(Integer value) {
            addCriterion("user_info_id >", value, "userInfoId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andUserInfoIdGreaterThanColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("user_info_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_info_id >=", value, "userInfoId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andUserInfoIdGreaterThanOrEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("user_info_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoIdLessThan(Integer value) {
            addCriterion("user_info_id <", value, "userInfoId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andUserInfoIdLessThanColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("user_info_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_info_id <=", value, "userInfoId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andUserInfoIdLessThanOrEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("user_info_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserInfoIdIn(List<Integer> values) {
            addCriterion("user_info_id in", values, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdNotIn(List<Integer> values) {
            addCriterion("user_info_id not in", values, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdBetween(Integer value1, Integer value2) {
            addCriterion("user_info_id between", value1, value2, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_info_id not between", value1, value2, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andOrderNumberIsNull() {
            addCriterion("order_number is null");
            return (Criteria) this;
        }

        public Criteria andOrderNumberIsNotNull() {
            addCriterion("order_number is not null");
            return (Criteria) this;
        }

        public Criteria andOrderNumberEqualTo(String value) {
            addCriterion("order_number =", value, "orderNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andOrderNumberEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("order_number = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderNumberNotEqualTo(String value) {
            addCriterion("order_number <>", value, "orderNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andOrderNumberNotEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("order_number <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderNumberGreaterThan(String value) {
            addCriterion("order_number >", value, "orderNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andOrderNumberGreaterThanColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("order_number > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderNumberGreaterThanOrEqualTo(String value) {
            addCriterion("order_number >=", value, "orderNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andOrderNumberGreaterThanOrEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("order_number >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderNumberLessThan(String value) {
            addCriterion("order_number <", value, "orderNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andOrderNumberLessThanColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("order_number < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderNumberLessThanOrEqualTo(String value) {
            addCriterion("order_number <=", value, "orderNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andOrderNumberLessThanOrEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("order_number <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderNumberLike(String value) {
            addCriterion("order_number like", value, "orderNumber");
            return (Criteria) this;
        }

        public Criteria andOrderNumberNotLike(String value) {
            addCriterion("order_number not like", value, "orderNumber");
            return (Criteria) this;
        }

        public Criteria andOrderNumberIn(List<String> values) {
            addCriterion("order_number in", values, "orderNumber");
            return (Criteria) this;
        }

        public Criteria andOrderNumberNotIn(List<String> values) {
            addCriterion("order_number not in", values, "orderNumber");
            return (Criteria) this;
        }

        public Criteria andOrderNumberBetween(String value1, String value2) {
            addCriterion("order_number between", value1, value2, "orderNumber");
            return (Criteria) this;
        }

        public Criteria andOrderNumberNotBetween(String value1, String value2) {
            addCriterion("order_number not between", value1, value2, "orderNumber");
            return (Criteria) this;
        }

        public Criteria andAmountIsNull() {
            addCriterion("amount is null");
            return (Criteria) this;
        }

        public Criteria andAmountIsNotNull() {
            addCriterion("amount is not null");
            return (Criteria) this;
        }

        public Criteria andAmountEqualTo(BigDecimal value) {
            addCriterion("amount =", value, "amount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andAmountEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("amount = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountNotEqualTo(BigDecimal value) {
            addCriterion("amount <>", value, "amount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andAmountNotEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("amount <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThan(BigDecimal value) {
            addCriterion("amount >", value, "amount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andAmountGreaterThanColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("amount > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("amount >=", value, "amount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andAmountGreaterThanOrEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("amount >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountLessThan(BigDecimal value) {
            addCriterion("amount <", value, "amount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andAmountLessThanColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("amount < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("amount <=", value, "amount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andAmountLessThanOrEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("amount <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountIn(List<BigDecimal> values) {
            addCriterion("amount in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotIn(List<BigDecimal> values) {
            addCriterion("amount not in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("amount between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("amount not between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andCouponAmountIsNull() {
            addCriterion("coupon_amount is null");
            return (Criteria) this;
        }

        public Criteria andCouponAmountIsNotNull() {
            addCriterion("coupon_amount is not null");
            return (Criteria) this;
        }

        public Criteria andCouponAmountEqualTo(BigDecimal value) {
            addCriterion("coupon_amount =", value, "couponAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andCouponAmountEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("coupon_amount = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCouponAmountNotEqualTo(BigDecimal value) {
            addCriterion("coupon_amount <>", value, "couponAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andCouponAmountNotEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("coupon_amount <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCouponAmountGreaterThan(BigDecimal value) {
            addCriterion("coupon_amount >", value, "couponAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andCouponAmountGreaterThanColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("coupon_amount > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCouponAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("coupon_amount >=", value, "couponAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andCouponAmountGreaterThanOrEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("coupon_amount >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCouponAmountLessThan(BigDecimal value) {
            addCriterion("coupon_amount <", value, "couponAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andCouponAmountLessThanColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("coupon_amount < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCouponAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("coupon_amount <=", value, "couponAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andCouponAmountLessThanOrEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("coupon_amount <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCouponAmountIn(List<BigDecimal> values) {
            addCriterion("coupon_amount in", values, "couponAmount");
            return (Criteria) this;
        }

        public Criteria andCouponAmountNotIn(List<BigDecimal> values) {
            addCriterion("coupon_amount not in", values, "couponAmount");
            return (Criteria) this;
        }

        public Criteria andCouponAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("coupon_amount between", value1, value2, "couponAmount");
            return (Criteria) this;
        }

        public Criteria andCouponAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("coupon_amount not between", value1, value2, "couponAmount");
            return (Criteria) this;
        }

        public Criteria andPointsAmountIsNull() {
            addCriterion("points_amount is null");
            return (Criteria) this;
        }

        public Criteria andPointsAmountIsNotNull() {
            addCriterion("points_amount is not null");
            return (Criteria) this;
        }

        public Criteria andPointsAmountEqualTo(BigDecimal value) {
            addCriterion("points_amount =", value, "pointsAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andPointsAmountEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("points_amount = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPointsAmountNotEqualTo(BigDecimal value) {
            addCriterion("points_amount <>", value, "pointsAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andPointsAmountNotEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("points_amount <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPointsAmountGreaterThan(BigDecimal value) {
            addCriterion("points_amount >", value, "pointsAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andPointsAmountGreaterThanColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("points_amount > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPointsAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("points_amount >=", value, "pointsAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andPointsAmountGreaterThanOrEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("points_amount >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPointsAmountLessThan(BigDecimal value) {
            addCriterion("points_amount <", value, "pointsAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andPointsAmountLessThanColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("points_amount < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPointsAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("points_amount <=", value, "pointsAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andPointsAmountLessThanOrEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("points_amount <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPointsAmountIn(List<BigDecimal> values) {
            addCriterion("points_amount in", values, "pointsAmount");
            return (Criteria) this;
        }

        public Criteria andPointsAmountNotIn(List<BigDecimal> values) {
            addCriterion("points_amount not in", values, "pointsAmount");
            return (Criteria) this;
        }

        public Criteria andPointsAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("points_amount between", value1, value2, "pointsAmount");
            return (Criteria) this;
        }

        public Criteria andPointsAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("points_amount not between", value1, value2, "pointsAmount");
            return (Criteria) this;
        }

        public Criteria andGenTimeIsNull() {
            addCriterion("gen_time is null");
            return (Criteria) this;
        }

        public Criteria andGenTimeIsNotNull() {
            addCriterion("gen_time is not null");
            return (Criteria) this;
        }

        public Criteria andGenTimeEqualTo(LocalTime value) {
            addCriterion("gen_time =", value, "genTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andGenTimeEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("gen_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGenTimeNotEqualTo(LocalTime value) {
            addCriterion("gen_time <>", value, "genTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andGenTimeNotEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("gen_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGenTimeGreaterThan(LocalTime value) {
            addCriterion("gen_time >", value, "genTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andGenTimeGreaterThanColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("gen_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGenTimeGreaterThanOrEqualTo(LocalTime value) {
            addCriterion("gen_time >=", value, "genTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andGenTimeGreaterThanOrEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("gen_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGenTimeLessThan(LocalTime value) {
            addCriterion("gen_time <", value, "genTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andGenTimeLessThanColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("gen_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGenTimeLessThanOrEqualTo(LocalTime value) {
            addCriterion("gen_time <=", value, "genTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andGenTimeLessThanOrEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("gen_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGenTimeIn(List<LocalTime> values) {
            addCriterion("gen_time in", values, "genTime");
            return (Criteria) this;
        }

        public Criteria andGenTimeNotIn(List<LocalTime> values) {
            addCriterion("gen_time not in", values, "genTime");
            return (Criteria) this;
        }

        public Criteria andGenTimeBetween(LocalTime value1, LocalTime value2) {
            addCriterion("gen_time between", value1, value2, "genTime");
            return (Criteria) this;
        }

        public Criteria andGenTimeNotBetween(LocalTime value1, LocalTime value2) {
            addCriterion("gen_time not between", value1, value2, "genTime");
            return (Criteria) this;
        }

        public Criteria andAddressStrIsNull() {
            addCriterion("address_str is null");
            return (Criteria) this;
        }

        public Criteria andAddressStrIsNotNull() {
            addCriterion("address_str is not null");
            return (Criteria) this;
        }

        public Criteria andAddressStrEqualTo(String value) {
            addCriterion("address_str =", value, "addressStr");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andAddressStrEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("address_str = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressStrNotEqualTo(String value) {
            addCriterion("address_str <>", value, "addressStr");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andAddressStrNotEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("address_str <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressStrGreaterThan(String value) {
            addCriterion("address_str >", value, "addressStr");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andAddressStrGreaterThanColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("address_str > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressStrGreaterThanOrEqualTo(String value) {
            addCriterion("address_str >=", value, "addressStr");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andAddressStrGreaterThanOrEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("address_str >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressStrLessThan(String value) {
            addCriterion("address_str <", value, "addressStr");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andAddressStrLessThanColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("address_str < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressStrLessThanOrEqualTo(String value) {
            addCriterion("address_str <=", value, "addressStr");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria andAddressStrLessThanOrEqualToColumn(AllOrder.Column column) {
            addCriterion(new StringBuilder("address_str <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressStrLike(String value) {
            addCriterion("address_str like", value, "addressStr");
            return (Criteria) this;
        }

        public Criteria andAddressStrNotLike(String value) {
            addCriterion("address_str not like", value, "addressStr");
            return (Criteria) this;
        }

        public Criteria andAddressStrIn(List<String> values) {
            addCriterion("address_str in", values, "addressStr");
            return (Criteria) this;
        }

        public Criteria andAddressStrNotIn(List<String> values) {
            addCriterion("address_str not in", values, "addressStr");
            return (Criteria) this;
        }

        public Criteria andAddressStrBetween(String value1, String value2) {
            addCriterion("address_str between", value1, value2, "addressStr");
            return (Criteria) this;
        }

        public Criteria andAddressStrNotBetween(String value1, String value2) {
            addCriterion("address_str not between", value1, value2, "addressStr");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_order
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table all_order
         *
         * @mbg.generated
         */
        private AllOrderExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        protected Criteria(AllOrderExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public AllOrderExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table all_order
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_order
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_order
         *
         * @mbg.generated
         */
        void example(com.cqjtu.sc.orderservice.db.domain.AllOrderExample example);
    }
}